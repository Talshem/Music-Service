{"version":3,"sources":["components/Home.js","Network.js","UserContext.js","components/Songs.js","components/Artists.js","components/Playlists.js","components/Albums.js","components/PostSong.js","components/PostAlbum.js","components/PostArtist.js","components/PostPlaylist.js","components/Uploads.js","NoFound.js","components/AlbumData.js","components/ArtistData.js","components/PlaylistData.js","components/SongData.js","components/UploadsData.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","useStateIfMounted","songs","setSongs","albums","setAlbums","artists","setArtists","playlists","setPlaylists","loading","setLoading","songsLength","setSongsLength","albumsLength","setAlbumsLength","artistsLength","setArtistsLength","playlistsLength","setPlaylistsLength","useEffect","a","axios","get","makeLists","data","console","log","fetchData","playCount","e","patch","youtube_id","play_count","sArray","map","length","key","className","to","Artist","title","name","onPlay","videoId","id","opts","width","height","alArray","onError","target","onerror","src","alt","cover_img","arArray","pArray","active","spinner","css","color","style","zIndex","size","naturalSlideWidth","naturalSlideHeight","visibleSlides","totalSlides","step","infinite","maxHeight","float","network","create","interceptors","request","use","config","headers","localStorage","getItem","response","error","UserContext","React","createContext","UserProvider","Provider","Consumer","MemoSong","memo","item","adminDelete","like","match","include","useRouteMatch","cursor","url","prevProps","nextProps","Songs","list","setList","search","setSearch","favorites","setFavorites","toggle","setToggle","user","useContext","username","preferences","prefArray","item_id","filter","toUpperCase","includes","favoriteList","makeSongs","deleteSong","delete","isLiked","document","getElementById","setAttribute","classList","replace","is_liked","type","post","array","heart","onClick","deleteButton","marginTop","is_admin","forEach","removeAttribute","filterFavorites","onChange","event","value","MemoArtist","Artists","toString","makeArtists","deleteArtist","MemoPlaylist","Playlists","makePlaylists","deletePlaylist","MemoAlbum","Albums","makeAlbums","deleteAlbum","PostSong","undefined","selectAlbum","setSelectAlbum","setTitle","setLength","setYoutube_id","artist","setArtist","album","setAlbum","lyrics","setLyrics","track_number","setTrack_number","created_at","setCreated_at","validateLength","test","addSong","preventDefault","date","Date","enter","newCreated_at","slice","newLyrics","innerHTML","ArtistId","AlbumId","Username","upload_at","toISOString","substring","window","location","reload","selectArtist","label","albumList","today","dd","getDate","mm","getMonth","yyyy","getFullYear","onSubmit","required","defaultValue","maxMenuHeight","x","options","rows","max","form","marginLeft","fontSize","PostAlbum","addAlbum","image","class","PostArtist","addArtist","reset","PostPlaylist","selectSong","addPlaylist","then","result","JSON","stringify","song","isMulti","Uploads","position","top","textAlign","marginBottom","NoFound","useState","unfound","setUnfound","page","AlbumData","albumId","useParams","makeID","push","display","marginRight","playing","controls","substr","setTimeout","ArtistData","artistId","z","songList","left","PlaylistData","playlist","setPlaylist","playlistId","Song","SongData","setSong","songId","split","idx","Album","UploadsData","setName","uploads","setUploads","confirm","useConfirm","userId","description","catch","capitalUserId","charAt","email","Transition","forwardRef","ref","Slide","direction","App","registerOpen","setRegisterOpen","loginOpen","setLoginOpen","setUser","last_login","autoLogin","handleRegister","password","repassword","occupied","success","token","setItem","message","handleLogin","logout","Button","variant","clear","platform","disabled","Dialog","TransitionComponent","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","inputProps","maxLength","fullWidth","minLength","DialogActions","login","autoComplete","register","AnimatedSwitch","withRouter","TransitionGroup","CSSTransition","classNames","timeout","exact","path","component","paddingTop","fontWeight","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37e766a7.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {\r\n  ButtonBack, ButtonNext, CarouselProvider, Slide, Slider,\r\n} from 'pure-react-carousel';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction Home(props) {\r\nconst [songs, setSongs] = useStateIfMounted([]);\r\nconst [albums, setAlbums] = useStateIfMounted([]);\r\nconst [artists, setArtists] = useStateIfMounted([]);\r\nconst [playlists, setPlaylists] = useStateIfMounted([]);\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\n\r\nconst [songsLength, setSongsLength] = useStateIfMounted(0);\r\nconst [albumsLength, setAlbumsLength] = useStateIfMounted(0);\r\nconst [artistsLength, setArtistsLength] = useStateIfMounted(0);\r\nconst [playlistsLength, setPlaylistsLength] = useStateIfMounted(0);\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n      const songs = await axios.get(`/api/songs`)\r\n      const albums = await axios.get(`/api/albums`);\r\n      const artists = await axios.get(`/api/artists`);\r\n      const playlists = await axios.get(`/api/playlists`);\r\n      makeLists(songs.data, albums.data, artists.data, playlists.data)\r\n      setLoading(false)\r\n      }\r\n       catch(response) {\r\n      setLoading(false)\r\nconsole.log(response)\r\n      }\r\n    }; fetchData();\r\n   }, [])\r\n\r\nconst playCount = async (e) => {\r\nawait axios.patch(`/api/songs/count/${e.youtube_id}`, {\r\nplay_count: e.play_count + 1,\r\n});\r\n};\r\n\r\nconst makeLists = (songs, albums, artists, playlists) => {\r\nlet sArray = songs.map(e => {\r\nsetSongsLength(songs.length)\r\nreturn (\r\n<Slide key={e.youtube_id} className=\"hov carouselist\">\r\n<div>\r\n<p>\r\n<NavLink className=\"navTo\" to={`/songs/${e.youtube_id}`} > {e.Artist ? <> {e.title} - {e.Artist.name} </> : <> {e.title}</>}</NavLink>\r\n</p>\r\n<YouTube className=\"video\" onPlay={() => playCount(e)}videoId={e.youtube_id} id=\"video\" opts={{width:\"300\",height:\"300\"}}/>\r\n<br/><br/>\r\n</div>\r\n</Slide>\r\n)}\r\n)\r\n\r\n\r\n\r\nlet alArray = albums.map(e => {\r\nsetAlbumsLength(albums.length)\r\nreturn (\r\n<Slide key={e.name} className=\"hov carouselist\">\r\n<p>\r\n<NavLink className=\"navTo\" to={`/albums/${e.id}`} >\r\n{e.Artist ? <> {e.name} - {e.Artist.name} </> : <> {e.name}</>}\r\n</NavLink>\r\n</p>\r\n<NavLink className=\"navTo\" to={`/albums/${e.id}`} >\r\n<img onError={(e)=>{e.target.onerror = null; e.target.src=\"/no_image.jpg\"}} alt={e.name} width=\"300\" height=\"300\" src={e.cover_img}></img>\r\n</NavLink>\r\n<br/><br/>\r\n</Slide>\r\n)}\r\n)\r\n\r\nlet arArray = artists.map(e => {\r\nsetArtistsLength(artists.length)\r\nreturn (\r\n<Slide key={e.name} className=\"hov carouselist\">\r\n<p>\r\n<NavLink className=\"navTo\" to={`/artists/${e.id}`}>\r\n{e.name}\r\n</NavLink>\r\n</p>\r\n<NavLink className=\"navTo\" to={`/artists/${e.id}`}>\r\n<img onError={(e)=>{e.target.onerror = null; e.target.src=\"/no_image.jpg\"}} alt={e.name} width=\"300\" height=\"300\" src={e.cover_img}></img>\r\n</NavLink>\r\n<br/><br/>\r\n</Slide>\r\n)}\r\n)\r\n\r\nlet pArray = playlists.map(e => {\r\nsetPlaylistsLength(playlists.length)\r\nreturn (\r\n<Slide key={e.name} className=\"hov carouselist\">\r\n<p>\r\n<NavLink className=\"navTo\" to={`/playlists/${e.id}`}>\r\n{e.name}\r\n</NavLink>\r\n</p>\r\n<NavLink className=\"navTo\" to={`/playlists/${e.id}`}>\r\n<img onError={(e)=>{e.target.onerror = null; e.target.src=\"/no_image.jpg\"}} alt={e.name} width=\"300\" height=\"300\" src={e.cover_img}></img>\r\n</NavLink>\r\n<br/><br/>\r\n</Slide>\r\n)}\r\n)\r\nsetSongs(sArray)\r\nsetAlbums(alArray)\r\nsetArtists(arArray)\r\nsetPlaylists(pArray)\r\n}\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n  return (\r\n    <div>\r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n\r\n\r\n<div className=\"homeLists\">\r\n<h4> Top Songs </h4> \r\n  <CarouselProvider\r\n    naturalSlideWidth={25}\r\n    naturalSlideHeight={35}\r\n    visibleSlides={4}\r\n    totalSlides={songsLength}\r\n    step={4}\r\n    infinite\r\n  >\r\n<Slider style={{maxHeight:\"420px\"}}>\r\n{songs}\r\n</Slider>\r\n{!loading ?\r\n<>\r\n    <ButtonBack className=\"arrow fa fa-arrow-left\" ></ButtonBack>\r\n    <ButtonNext style={{float:\"right\"}}  className=\"arrow fa fa-arrow-right\"></ButtonNext>\r\n</>\r\n: null}\r\n    </CarouselProvider>\r\n\r\n\r\n<h4> Top Albums </h4> \r\n  <CarouselProvider\r\n    naturalSlideWidth={25}\r\n    naturalSlideHeight={35}\r\n    visibleSlides={4}\r\n    totalSlides={albumsLength}\r\n    step={4}\r\n    infinite\r\n  >\r\n<Slider style={{maxHeight:\"420px\"}}>\r\n{albums}\r\n</Slider>\r\n{!loading ?\r\n<>\r\n    <ButtonBack className=\"arrow fa fa-arrow-left\" ></ButtonBack>\r\n    <ButtonNext style={{float:\"right\"}} className=\"arrow fa fa-arrow-right\"></ButtonNext>\r\n</>\r\n: null}\r\n</CarouselProvider>\r\n\r\n<h4> Top Artists </h4> \r\n  <CarouselProvider\r\n    naturalSlideWidth={25}\r\n    naturalSlideHeight={35}\r\n    visibleSlides={4}\r\n    totalSlides={artistsLength}\r\n    step={4}\r\n    infinite\r\n  >\r\n<Slider style={{maxHeight:\"420px\"}}>\r\n{artists}\r\n</Slider>\r\n{!loading ?\r\n<>\r\n    <ButtonBack className=\"arrow fa fa-arrow-left\" ></ButtonBack>\r\n    <ButtonNext style={{float:\"right\"}} className=\"arrow fa fa-arrow-right\"></ButtonNext>\r\n</>\r\n: null}\r\n</CarouselProvider>\r\n\r\n<h4> Top Playlists </h4> \r\n  <CarouselProvider\r\n    naturalSlideWidth={25}\r\n    naturalSlideHeight={35}\r\n    visibleSlides={4}\r\n    totalSlides={playlistsLength}\r\n    step={4}\r\n    infinite\r\n  >\r\n<Slider style={{maxHeight:\"420px\"}}>\r\n{playlists}\r\n</Slider>{!loading ?\r\n<>\r\n    <ButtonBack className=\"arrow fa fa-arrow-left\" ></ButtonBack>\r\n    <ButtonNext style={{float:\"right\"}} className=\"arrow fa fa-arrow-right\"></ButtonNext>\r\n</>\r\n: null}\r\n</CarouselProvider>\r\n</div>\r\n\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nconst network = axios.create({});\r\n\r\nconst getToken = () => {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\nnetwork.interceptors.request.use(\r\n  config => {\r\n    config.headers[\"Username\"] = localStorage.getItem('username');\r\n    config.headers[\"Authorization\"] = \"bearer \" + getToken();\r\n    return config;\r\n  }\r\n);\r\n\r\nnetwork.interceptors.response.use(\r\n  config => {\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return error;\r\n  }\r\n);\r\n\r\nexport default network;","import React from 'react'\r\n\r\nconst UserContext = React.createContext(false)\r\n\r\nexport const UserProvider = UserContext.Provider\r\nexport const UserConsumer = UserContext.Consumer\r\n\r\nexport default UserContext","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport {\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport network from '../Network.js';\r\nimport UserContext from '../UserContext'\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction Song({item, adminDelete, like, include}){\r\n\r\nlet match = useRouteMatch();\r\n\r\nconst playCount = async (e) => {\r\nawait axios.patch(`/api/songs/count/${e.youtube_id}`, {\r\nplay_count: e.play_count + 1,\r\n});\r\n};\r\nreturn (\r\n<li className=\"grid-item\">\r\n<span style={{cursor:'pointer'}} >\r\n{like}\r\n</span>\r\n<p style={{width: like ? '200px': '250px'}}>\r\n<NavLink className=\"navTo\" to={`${match.url}/${item.youtube_id}`}>{item.Artist ? <> {item.title} - {item.Artist.name} </> : <> {item.title}</>}</NavLink>\r\n</p>\r\n<YouTube className=\"video\" onPlay={() => playCount(item)} videoId={item.youtube_id} id=\"video\" opts={{width:\"250\",height:\"250\"}}/>\r\n{adminDelete}\r\n</li>\r\n)}\r\n\r\nconst MemoSong = React.memo(Song, (prevProps, nextProps) => {\r\n  if (prevProps.include === nextProps.include) {\r\n    return true;\r\n  }\r\n  return false;\r\n});\r\n\r\nfunction Songs(props) {\r\nconst [list, setList] = useStateIfMounted([])\r\nconst [search, setSearch] = useStateIfMounted('')\r\nconst [favorites, setFavorites] = useStateIfMounted(false)\r\nconst [toggle, setToggle] = useStateIfMounted(0)\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\n\r\nconst user = useContext(UserContext)\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n      const songs = await (await axios.get(`/api/songs?name=${search}`)).data;\r\n      const preferences = user ? await (await axios.get(`/api/preferences/song/${user.username}`)).data : [];\r\n      let prefArray = preferences.map(e => e.item_id)\r\n      let list = songs.filter(e => e.title.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makeSongs(list, prefArray) \r\n      } else {\r\n      let favoriteList = list.filter(e => prefArray.includes(e.youtube_id))\r\n      makeSongs(favoriteList, prefArray)\r\n      }\r\n    } catch(response) {\r\n    setLoading(false)  \r\n    return\r\n    }\r\n    }; fetchData();\r\n   }, [toggle, favorites])\r\n\r\n\r\nconst handleSearch = () => {\r\nsetToggle(e => e + 1)\r\nsetLoading(true)\r\n}\r\n\r\nconst handleFavorite = () => {\r\nsetFavorites(!favorites)\r\nsetLoading(true)\r\n}\r\n\r\nconst deleteSong = async (e) => {\r\nawait network.delete(`/api/songs/${e.youtube_id}`);\r\nsetToggle(e => e + 1)\r\n};\r\n\r\nconst isLiked = async (e, preferences) => {\r\ndocument.getElementById(e.youtube_id + 'like').setAttribute('disabled', false);\r\ntry{\r\nif (preferences.includes(e.youtube_id)){\r\ndocument.getElementById(e.youtube_id + 'like').classList.replace('fas', 'far');\r\nawait network.patch(`/api/songs/like/${e.youtube_id}`, {\r\nis_liked: e.is_liked - 1,\r\n});\r\nawait network.patch(`/api/preferences`, {\r\nusername: user.username,\r\ntype: 'song',\r\nitem_id: e.youtube_id\r\n});\r\n} else {\r\ndocument.getElementById(e.youtube_id + 'like').classList.replace('far', 'fas');\r\nawait network.patch(`/api/songs/like/${e.youtube_id}`, {\r\nis_liked: e.is_liked + 1,\r\n});\r\nawait network.post(`/api/preferences`, {\r\nusername: user.username,\r\ntype: 'song',\r\nitem_id: e.youtube_id\r\n});\r\n}\r\n} catch (response) {\r\nconsole.log(response)\r\n}\r\nsetToggle(e => e + 1)\r\n}\r\n\r\n\r\nconst makeSongs = (songs, preferences) => {\r\nlet array = songs.map(e => {\r\nconst heart = \r\n<button onClick={() => isLiked(e, preferences)} id={e.youtube_id + 'like'} className={preferences.includes(e.youtube_id) ? \"like fas fa-heart\" : \"like far fa-heart\"}/>\r\nconst deleteButton = <button onClick={() => deleteSong(e)} style={{marginTop:'30px'}} className=\"deleteButton\">Delete</button>;\r\nconst like = user ? heart :  null;\r\nconst adminDelete = user && user.is_admin ? deleteButton : null;\r\nreturn (\r\n\r\n            <MemoSong\r\n            key={e.youtube_id} \r\n            item={e}\r\n            adminDelete={adminDelete}\r\n            like={like}\r\n            include={preferences.includes(e.youtube_id)}\r\n            />\r\n)})\r\nsetList(array)\r\nsongs.forEach(e =>{\r\ndocument.getElementById(e.youtube_id + 'like').removeAttribute('disabled');\r\n})\r\nsetLoading(false)\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n  return (\r\n<div> \r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n<p className='listTitle'>\r\n<NavLink className=\"fa fa-plus-square-o add\" to=\"/PostSong\"></NavLink>  \r\n{\" \"} Songs</p>\r\n<input className=\"filterList\" onChange={(event) => setSearch(event.target.value)} /> \r\n<button onClick={() => handleSearch()} className=\"searchButton\">Search</button>\r\n{user ? <i className=\"filterFavorites\" onClick={() => handleFavorite()}>{filterFavorites}</i> : ''}\r\n<ul className=\"grid-container\"><br/>\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Songs;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport network from '../Network.js';\r\nimport UserContext from '../UserContext'\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction Artist({item, adminDelete, like, include}){\r\n\r\nlet match = useRouteMatch();\r\n\r\nreturn (\r\n<li className=\"grid-item\">\r\n<span style={{cursor:'pointer'}}>{like} {\" \"}</span>\r\n<p style={{width: like ? '195px': '250px'}}>\r\n<NavLink className=\"navTo\" to={`${match.url}/${item.id}`}>\r\n{item.name}\r\n</NavLink>\r\n</p>\r\n<NavLink className=\"navTo\"to={`${match.url}/${item.id}`}>\r\n<img onError={(item)=>{item.target.onerror = null; item.target.src=\"/no_image.jpg\"}} alt={item.name} width=\"250\" height=\"250\" src={item.cover_img}></img>\r\n</NavLink>\r\n{adminDelete}\r\n</li>\r\n)}\r\n\r\nconst MemoArtist = React.memo(Artist, (prevProps, nextProps) => {\r\n  if (prevProps.include === nextProps.include) {\r\n    return true;\r\n  }\r\n  return false;\r\n});\r\n\r\nfunction Artists(props) {\r\nconst [list, setList] = useStateIfMounted([])\r\nconst [search, setSearch] = useStateIfMounted('')\r\nconst [favorites, setFavorites] = useStateIfMounted(false)\r\nconst [toggle, setToggle] = useStateIfMounted(0)\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\n\r\nconst user = useContext(UserContext)\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      try{\r\n      const artists = await (await axios.get(`/api/artists?name=${search}`)).data;\r\n      const preferences = user ? await (await axios.get(`/api/preferences/artist/${user.username}`)).data: [];\r\n      let prefArray = preferences.map(e => e.item_id)\r\n      let list = artists.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makeArtists(list, prefArray) \r\n      } else {\r\n      let favoriteList = list.filter(e => prefArray.includes(e.id.toString()))\r\n      makeArtists(favoriteList, prefArray)\r\n      }} catch(response) {\r\n    setLoading(false)\r\n    return\r\n      }\r\n    }; fetchData();\r\n   }, [toggle, favorites])\r\n\r\nconst handleSearch = () => {\r\nsetToggle(e => e + 1)\r\nsetLoading(true)\r\n}\r\n\r\nconst handleFavorite = () => {\r\nsetFavorites(!favorites)\r\nsetLoading(true)\r\n}\r\n\r\nconst deleteArtist = async (e) => {\r\nawait network.delete(`/api/artists/${e.id}`);\r\nsetToggle(e => e + 1)\r\n};\r\n\r\n\r\nconst isLiked = async (e, preferences) => {\r\ndocument.getElementById(e.id + 'like').setAttribute('disabled', false);\r\ntry{\r\ndocument.getElementById(e.id + 'like').classList.replace('fas', 'far');\r\nif (preferences.includes(e.id.toString())){\r\nawait network.patch(`/api/artists/like/${e.id}`, {\r\nis_liked: e.is_liked - 1,\r\n});\r\nawait network.patch(`/api/preferences`, {\r\nusername: user.username,\r\ntype: 'artist',\r\nitem_id: e.id\r\n});\r\n} else {\r\ndocument.getElementById(e.id + 'like').classList.replace('far', 'fas');\r\nawait network.patch(`/api/artists/like/${e.id}`, {\r\nis_liked: e.is_liked + 1,\r\n});\r\nawait network.post(`/api/preferences`, {\r\nusername: user.username,\r\ntype: 'artist',\r\nitem_id: e.id\r\n});\r\n}\r\n} catch (response) {\r\nconsole.log(response)\r\n}\r\nsetToggle(e => e + 1)\r\n}\r\n\r\n\r\nconst makeArtists = (artists, preferences) => {\r\nlet array = artists.map(e => {\r\nconst heart = preferences.includes(e.id.toString()) ? \r\n<button  onClick={() => isLiked(e, preferences)} id={e.id + 'like'} className=\"like fas fa-heart\"/> :\r\n<button  onClick={() => isLiked(e, preferences)} id={e.id + 'like'} className=\"like far fa-heart\"/>\r\nconst deleteButton = <button onClick={() => deleteArtist(e)} className=\"deleteButton\">Delete</button>;\r\nconst like = user ? heart :  null;\r\nconst adminDelete = user && user.is_admin ? deleteButton : null;\r\n\r\nreturn (\r\n            <MemoArtist\r\n            key={e.id}\r\n            item={e}\r\n            adminDelete={adminDelete}\r\n            like={like}\r\n            include={preferences.includes(e.id.toString())}\r\n            />\r\n)}\r\n)\r\nsetList(array)\r\nsetLoading(false)\r\nartists.forEach(e =>{\r\ndocument.getElementById(e.id + 'like').removeAttribute('disabled');\r\n})\r\n}\r\n\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n  return (\r\n<div> \r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n<p className='listTitle'>\r\n<NavLink className=\"fa fa-plus-square-o add\" to=\"/PostArtist\"></NavLink>  \r\n{\" \"} Artists</p>\r\n<input className=\"filterList\" onChange={(event) => setSearch(event.target.value)} /> \r\n<button onClick={() => handleSearch()} className=\"searchButton\">Search</button>\r\n{user ? <i className=\"filterFavorites\" onClick={() => handleFavorite()}>{filterFavorites}</i> : ''}\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Artists;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n  \r\nimport React, { useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport network from '../Network.js';\r\nimport UserContext from '../UserContext'\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction Playlist({item, adminDelete, like, include}){\r\n\r\nlet match = useRouteMatch();\r\n\r\nreturn (\r\n<li className=\"grid-item\">\r\n<span style={{cursor:'pointer'}} >{like} </span>\r\n<p style={{width: like ? '195px': '250px'}}>\r\n<NavLink className=\"navTo\"  to={`${match.url}/${item.id}`}>\r\n{item.name}\r\n</NavLink>\r\n</p>\r\n<NavLink className=\"navTo\" to={`${match.url}/${item.id}`}>\r\n<img onError={(item)=>{item.target.onerror = null; item.target.src=\"/no_image.jpg\"}} alt={item.name} width=\"250\" height=\"250\" src={item.cover_img}></img>\r\n</NavLink>\r\n{adminDelete}\r\n</li>\r\n)}\r\n\r\nconst MemoPlaylist = React.memo(Playlist, (prevProps, nextProps) => {\r\n  if (prevProps.include === nextProps.include) {\r\n    return true;\r\n  }\r\n  return false;\r\n});\r\n\r\n\r\nfunction Playlists(props) {\r\nconst [list, setList] = useStateIfMounted([])\r\nconst [search, setSearch] = useStateIfMounted('')\r\nconst [favorites, setFavorites] = useStateIfMounted(false)\r\nconst [toggle, setToggle] = useStateIfMounted(0)\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\n\r\n\r\nconst user = useContext(UserContext)\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      try{\r\n      const artists = await (await axios.get(`/api/playlists?name=${search}`)).data;\r\n      const preferences = user ? await (await axios.get(`/api/preferences/playlist/${user.username}`)).data : [];\r\n      let prefArray = preferences.map(e => e.item_id)\r\n      let list = artists.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makePlaylists(list, prefArray) \r\n      } else {\r\n      let favoriteList = list.filter(e => prefArray.includes(e.id.toString()))\r\n      makePlaylists(favoriteList, prefArray)\r\n      }} catch(response) {\r\n    setLoading(false)\r\n    return\r\n      }\r\n    }; fetchData();\r\n   }, [toggle, favorites])\r\n\r\nconst handleSearch = () => {\r\nsetToggle(e => e + 1)\r\nsetLoading(true)\r\n}\r\n\r\nconst handleFavorite = () => {\r\nsetFavorites(!favorites)\r\nsetLoading(true)\r\n}\r\n\r\nconst deletePlaylist = async (e) => {\r\nawait network.delete(`/api/playlists/${e.id}`);\r\nsetToggle(e => e + 1)\r\n};\r\n\r\n\r\nconst isLiked = async (e, preferences) => {\r\ndocument.getElementById(e.id + 'like').setAttribute('disabled', false);\r\ntry{\r\ndocument.getElementById(e.id + 'like').classList.replace('fas', 'far');\r\nif (preferences.includes(e.id.toString())){\r\nawait network.patch(`/api/playlists/like/${e.id}`, {\r\nis_liked: e.is_liked - 1,\r\n});\r\nawait network.patch(`/api/preferences`, {\r\nusername: user.username,\r\ntype: 'playlist',\r\nitem_id: e.id\r\n});\r\n} else {\r\ndocument.getElementById(e.id + 'like').classList.replace('far', 'fas');\r\nawait network.patch(`/api/playlists/like/${e.id}`, {\r\nis_liked: e.is_liked + 1,\r\n});\r\nawait network.post(`/api/preferences`, {\r\nusername: user.username,\r\ntype: 'playlist',\r\nitem_id: e.id\r\n});\r\n}\r\n} catch (response) {\r\nconsole.log(response)\r\n}\r\nsetToggle(e => e + 1)\r\n}\r\n\r\n\r\nconst makePlaylists = (playlists, preferences) => {\r\nlet array = playlists.map(e => {\r\nconst heart = preferences.includes(e.id.toString()) ? \r\n<button  onClick={() => isLiked(e, preferences)} id={e.id + 'like'} className=\"like fas fa-heart\"/> :\r\n<button  onClick={() => isLiked(e, preferences)} id={e.id + 'like'} className=\"like far fa-heart\"/>\r\nconst deleteButton = <button onClick={() => deletePlaylist(e)} className=\"deleteButton\">Delete</button>;\r\nconst like = user ? heart :  null;\r\nconst adminDelete = user && user.is_admin ? deleteButton : null;\r\n\r\nreturn (\r\n            <MemoPlaylist\r\n            key={e.id}\r\n            item={e}\r\n            adminDelete={adminDelete}\r\n            like={like}\r\n            include={preferences.includes(e.id.toString())}\r\n            />\r\n)}\r\n)\r\nsetList(array)\r\nsetLoading(false)\r\nplaylists.forEach(e =>{\r\ndocument.getElementById(e.id + 'like').removeAttribute('disabled');\r\n})\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n  return (\r\n<div> \r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n<p className='listTitle'>\r\n<NavLink className=\"fa fa-plus-square-o add\" to=\"/PostPlaylist\"></NavLink>  \r\n{\" \"} Playlists</p>\r\n<input className=\"filterList\" onChange={(event) => setSearch(event.target.value)} /> \r\n<button onClick={() => handleSearch()} className=\"searchButton\">Search</button>\r\n{user ? <i className=\"filterFavorites\" onClick={() => handleFavorite()}>{filterFavorites}</i> : ''}\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Playlists;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  useRouteMatch,\r\n  } from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport network from '../Network.js';\r\nimport UserContext from '../UserContext'\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction Album({item, adminDelete, like, include}){\r\n\r\nlet match = useRouteMatch();\r\n\r\nreturn (\r\n<li className=\"grid-item\">\r\n<span style={{cursor:'pointer'}}>{like} </span>\r\n<p style={{width: like ? '195px': '250px'}}>\r\n<NavLink className=\"navTo\" to={`${match.url}/${item.id}`}>\r\n{item.Artist ? <> {item.name} - {item.Artist.name} </> : <> {item.name}</>}\r\n</NavLink>\r\n</p>\r\n<NavLink className=\"navTo\" to={`${match.url}/${item.id}`}>\r\n<img onError={(item)=>{item.target.onerror = null; item.target.src=\"/no_image.jpg\"}} alt={item.name} width=\"250\" height=\"250\" src={item.cover_img}></img>\r\n</NavLink>\r\n{adminDelete}\r\n</li>\r\n)}\r\n\r\nconst MemoAlbum = React.memo(Album, (prevProps, nextProps) => {\r\n  if (prevProps.include === nextProps.include) {\r\n    return true;\r\n  }\r\n  return false;\r\n});\r\n\r\n\r\nfunction Albums(props) {\r\nconst [list, setList] = useStateIfMounted([])\r\nconst [search, setSearch] = useStateIfMounted('')\r\nconst [toggle, setToggle] = useStateIfMounted(0)\r\nconst [favorites, setFavorites] = useStateIfMounted(false)\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\n\r\nconst user = useContext(UserContext)\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      try{\r\n      const albums = await (await axios.get(`/api/albums?name=${search}`)).data;\r\n      const preferences = user ? await (await axios.get(`/api/preferences/album/${user.username}`)).data : [];\r\n      let prefArray = preferences.map(e => e.item_id)\r\n      let list = albums.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makeAlbums(list, prefArray) \r\n      } else {\r\n      let favoriteList = list.filter(e => prefArray.includes(e.id.toString()))\r\n      makeAlbums(favoriteList, prefArray)\r\n      }} catch(response) {\r\n    setLoading(false)\r\n    return\r\n      }\r\n    }; fetchData();\r\n   }, [toggle, favorites])\r\n\r\nconst handleSearch = () => {\r\nsetToggle(e => e + 1)\r\nsetLoading(true)\r\n}\r\n\r\nconst deleteAlbum = async (e) => {\r\nawait network.delete(`/api/albums/${e.id}`);\r\nsetToggle(e => e + 1)\r\n};\r\n\r\nconst handleFavorite = () => {\r\nsetFavorites(!favorites)\r\nsetLoading(true)\r\n}\r\n\r\nconst isLiked = async (e, preferences) => {\r\ndocument.getElementById(e.id + 'like').setAttribute('disabled', false);\r\ntry{\r\ndocument.getElementById(e.id + 'like').classList.replace('fas', 'far');\r\nif (preferences.includes(e.id.toString())){\r\nawait network.patch(`/api/albums/like/${e.id}`, {\r\nis_liked: e.is_liked - 1,\r\n});\r\nawait network.patch(`/api/preferences`, {\r\nusername: user.username,\r\ntype: 'album',\r\nitem_id: e.id\r\n});\r\n} else {\r\ndocument.getElementById(e.id + 'like').classList.replace('far', 'fas');\r\nawait network.patch(`/api/albums/like/${e.id}`, {\r\nis_liked: e.is_liked + 1,\r\n});\r\nawait network.post(`/api/preferences`, {\r\nusername: user.username,\r\ntype: 'album',\r\nitem_id: e.id\r\n});\r\n}\r\n} catch (response) {\r\nconsole.log(response)\r\n}\r\nsetToggle(e => e + 1)\r\n}\r\n\r\nconst makeAlbums = (albums, preferences) => {\r\nlet array = albums.map(e => {\r\nconst heart = preferences.includes(e.id.toString()) ? \r\n<button  onClick={() => isLiked(e, preferences)} id={e.id + 'like'} className=\"like fas fa-heart\"/> :\r\n<button  onClick={() => isLiked(e, preferences)} id={e.id + 'like'} className=\"like far fa-heart\"/>\r\nconst deleteButton = <button onClick={() => deleteAlbum(e)} className=\"deleteButton\">Delete</button>;\r\nconst like = user ? heart :  null;\r\nconst adminDelete = user && user.is_admin ? deleteButton : null;\r\n\r\nreturn (\r\n            <MemoAlbum\r\n            key={e.id}\r\n            item={e}\r\n            adminDelete={adminDelete}\r\n            like={like}\r\n            include={preferences.includes(e.id.toString())}\r\n            />\r\n)}\r\n)\r\nsetList(array)\r\nsetLoading(false)\r\nalbums.forEach(e =>{\r\ndocument.getElementById(e.id + 'like').removeAttribute('disabled');\r\n})\r\n}\r\n\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n  return (\r\n<div> \r\n\r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n<p className='listTitle'>\r\n<NavLink className=\"fa fa-plus-square-o add\" to=\"/PostAlbum\"></NavLink>  \r\n{\" \"} Albums</p>\r\n<input className=\"filterList\" onChange={(event) => setSearch(event.target.value)} /> \r\n<button onClick={() => handleSearch()} className=\"searchButton\">Search</button>\r\n{user ? <i className=\"filterFavorites\" onClick={() => handleFavorite()}>{filterFavorites}</i> : ''}\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\n\r\nexport default Albums;\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport UserContext from '../UserContext'\r\nimport network from '../Network.js';\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction PostSong(props) {\r\nconst [albums, setAlbums] = useStateIfMounted([]);\r\nconst [artists, setArtists] = useStateIfMounted([]);\r\n\r\nconst [selectAlbum, setSelectAlbum] = useStateIfMounted(undefined)\r\nconst [title, setTitle] = useStateIfMounted(undefined)\r\nconst [length, setLength] = useStateIfMounted(undefined)\r\nconst [youtube_id, setYoutube_id] = useStateIfMounted(undefined)\r\nconst [artist, setArtist] = useStateIfMounted(undefined)\r\nconst [album, setAlbum] = useStateIfMounted(undefined)\r\nconst [lyrics, setLyrics] = useStateIfMounted(undefined)\r\nconst [track_number, setTrack_number] = useStateIfMounted(undefined)\r\nconst [created_at, setCreated_at] = useStateIfMounted(undefined)\r\n\r\nconst user = useContext(UserContext)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setAlbums(await (await axios.get(`/api/albums`)).data);\r\n      setArtists(await (await axios.get(`/api/artists`)).data);\r\n    }; fetchData();\r\n   }, []);\r\n\r\n\r\nfunction validateTrack(track) {\r\n   if (/^[1-9]\\d{0,1}(?:,\\d{1,3})?$/.test(track))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\nfunction validateLength(length) {\r\nif (/^([0-5]?[0-9]|2[0-3]):[0-5][0-9]$/.test(length)) {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\nconst addSong = async (event, title, length, youtube_id, artist, album, track_number, lyrics, created_at) => {\r\nevent.preventDefault();\r\n    const date = new Date();\r\n    let enter = /\\n/gi\r\n\r\n  const newCreated_at = created_at.slice(0,10)\r\n  const newLyrics = lyrics.replace(enter,`&&`);\r\n  \r\n    if (!validateLength(length)) {\r\n    return document.getElementById('songError').innerHTML = 'Length form is invalid';\r\n    }\r\n    if(!validateTrack(track_number)) {\r\n    return document.getElementById('songError').innerHTML = \"Track number field must be a 2-digit number\";\r\n    }\r\n\r\n    let occupied = await axios.get(`api/songs/${youtube_id}`)  \r\n    if(occupied.data){\r\n    return document.getElementById('songError').innerHTML = 'This song was already posted';\r\n    }\r\n\r\n    try{\r\n    await network.post(`/api/songs`, {\r\n    title: title, \r\n    length: length, \r\n    youtube_id: youtube_id, \r\n    ArtistId: artist.value, \r\n    AlbumId: album.value, \r\n    track_number: track_number, \r\n    lyrics: newLyrics, \r\n    created_at: newCreated_at,\r\n    Username: user.username,\r\n    upload_at: date.toISOString().substring(0, 10)\r\n    }\r\n    )\r\n  window.location.reload(false);\r\n} catch (response){\r\n document.getElementById('songError').innerHTML = 'Only registered users can post new songs to the website';\r\n  }; \r\n};\r\n\r\nfunction form(){\r\n\r\n      function insertTitle(event) {\r\n        setTitle(event.target.value);\r\n      }\r\n      function insertLength(event) {\r\n        setLength(event.target.value);\r\n      }\r\n      function insertYoutube(event) {\r\n        setYoutube_id(event.target.value);\r\n      }\r\n      function insertTrack(event) {\r\n        setTrack_number(event.target.value);\r\n      }\r\n\r\n      function insertLyrics(event) {\r\n        setLyrics(event.target.value);\r\n      }\r\n      function insertRelease(event) {\r\n        setCreated_at(event.target.value);\r\n      }\r\n      function insertArtist(event) {\r\n       let x = event.label\r\n       setArtist(event);\r\n       setSelectAlbum(albumList.filter(e => e.label.includes(x)));\r\n      }\r\n       function insertAlbum(event) {\r\n        setAlbum(event);\r\n      }\r\n\r\nlet selectArtist = artists.map(e => ({ value: e.id, label: e.name }))\r\nlet albumList = albums.map(e => ({value: e.id, label: `${e.name} - ${e.Artist.name}` }))\r\n\r\nvar today = new Date();\r\nvar dd = today.getDate();\r\nvar mm = today.getMonth()+1;\r\nvar yyyy = today.getFullYear();\r\n if(dd<10){\r\n        dd='0'+dd\r\n    } \r\n    if(mm<10){\r\n        mm='0'+mm\r\n    } \r\ntoday = yyyy+'-'+mm+'-'+dd;\r\n\r\nreturn (\r\n <form id=\"songForm\" className=\"songForm\" onSubmit={(event) => addSong(event, title, length, youtube_id, artist, album, track_number, lyrics, created_at)}>\r\n   <div>\r\n    <label> Name of the song: </label><br/>\r\n    <input id=\"song_img\" required type=\"text\" defaultValue={title} onChange={insertTitle}/> <br/><br/>\r\n<label>Youtube ID: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">youtube.com/watch?v= (Youtube_ID)</span></i><br/>\r\n    <input id=\"song_id\" required type=\"text\" defaultValue={youtube_id} onChange={insertYoutube}/><br/><br/>\r\n    <label> Length: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">M M : S S</span></i><br/>\r\n    <input id=\"song_length\" required type=\"text\" defaultValue={length} onChange={insertLength}/> <br/><br/>\r\n    <label>Artist: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">You can only select uploaded artists </span></i><br/>\r\n    <Select required maxMenuHeight={160}\r\n    defaultValue={artist}\r\n    onChange={insertArtist}\r\n    options={selectArtist}>\r\n    </Select><br/>\r\n    <label> Album: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">You can only select an uploaded albums</span></i><br/>\r\n    <Select required maxMenuHeight={160}\r\n    defaultValue={album}\r\n    onChange={insertAlbum}\r\n    options={selectAlbum}>\r\n    </Select><br/>\r\n    <label> Track number: </label><br/>\r\n    <input id=\"song_track\" required type=\"text\" defaultValue={track_number} onChange={insertTrack}/><br/><br/>\r\n    <NavLink style={{marginTop:\"0px\"}} className=\"fa fa-arrow-left back\" to=\"/Songs\"> </NavLink>\r\n     </div>\r\n     <div>\r\n    <label> Lyrics: </label><br/>\r\n    <textarea rows=\"12\" required type=\"text\" defaultValue={lyrics} onChange={insertLyrics}/> <br/><br/>\r\n    <label> Release date: </label><br/>\r\n    <input max={today} style={{height:\"32px\"}} id=\"song_date\" required type=\"date\" defaultValue={created_at} onChange={insertRelease}/><br/><br/>\r\n    <input style={{width:\"550px\"}} type='submit' className=\"post\" value=\"Post Song\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<p id=\"songError\" style={{marginTop:\"10px\", marginLeft:\"20px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostSong;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport UserContext from '../UserContext'\r\nimport network from '../Network.js';\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction PostAlbum(props) {\r\nconst [artists, setArtists] = useStateIfMounted([]);\r\n\r\nconst user = useContext(UserContext)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setArtists(await (await axios.get(`/api/artists`)).data);\r\n    }; fetchData();\r\n   }, []);\r\n  \r\n\r\n  const addAlbum = async (event, name, image, artist, created_at) => {\r\n   event.preventDefault();\r\n    const date = new Date();\r\n  const newCreated_at = created_at.slice(0,10)\r\n\r\n    if(!artist) {\r\n    return document.getElementById('albumError').innerHTML = \"Select an artist\";\r\n    }\r\n    try{\r\n    await network.post(`/api/albums`, {\r\n    name: name, \r\n    ArtistId: artist.value,\r\n    cover_img: image,\r\n    created_at: newCreated_at,\r\n    username: user.username,\r\n    upload_at: date.toISOString().substring(0, 10)\r\n    })\r\n  window.location.reload(false);\r\n} catch (response){\r\n  document.getElementById('albumError').innerHTML = 'Only registered users can post new albums to the website!';\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet name;\r\nlet image;\r\nlet created_at;\r\nlet artist;\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n      function insertImage(event) {\r\n        image = event.target.value;\r\n      }\r\n\r\n      function insertRelease(event) {\r\n        created_at = event.target.value;\r\n      }\r\n\r\n      function insertArtist(event) {\r\n        artist = event;\r\n      }\r\n\r\nvar today = new Date();\r\nvar dd = today.getDate();\r\nvar mm = today.getMonth()+1;\r\nvar yyyy = today.getFullYear();\r\n if(dd<10){\r\n        dd='0'+dd\r\n    } \r\n    if(mm<10){\r\n        mm='0'+mm\r\n    } \r\n\r\ntoday = yyyy+'-'+mm+'-'+dd;\r\n\r\n\r\nlet selectArtist = artists.map(e => ({ value: e.id, label: e.name }))\r\n\r\nreturn (\r\n <form id=\"albumForm\" className=\"albumForm\" onSubmit={(event) => addAlbum(event, name, image, artist, created_at)}>\r\n   <div>\r\n    <label> Name of the Album: </label><br/>\r\n    <input id=\"album_name\" required type=\"text\" defaultValue={name} onChange={insertName}/> <br/><br/>\r\n    <br/>\r\n    <label>Artist: </label><i class='tooltip fas fa-info'> <span class=\"tooltiptext\">You can only post albums of uploaded artists</span></i><br/>\r\n    <Select style={{}} required maxMenuHeight={160}\r\n    defaultValue={artist}\r\n    onChange={insertArtist}\r\n    options={selectArtist}>\r\n    </Select><br/><br/>\r\n    <label> Cover image URL </label><br/>\r\n    <input id=\"album_img\" required type=\"text\" defaultValue={image} onChange={insertImage}/><br/><br/>\r\n    <br/>\r\n    <label> Release date: </label><br/>\r\n   <input max={today} style={{height:\"32px\"}} id=\"album_date\" required type=\"date\" defaultValue={created_at} onChange={insertRelease}/><br/><br/>\r\n    <br/>\r\n    <input type='submit' className=\"post\" value=\"Post Album\"/>\r\n    <NavLink style={{marginTop:'-50px'}} className=\"fa fa-arrow-left back\" to=\"/Albums\"></NavLink>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<p id=\"albumError\" style={{marginTop:\"0px\", marginLeft:\"130px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostAlbum;\r\n","import React, { useContext } from 'react';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport UserContext from '../UserContext'\r\nimport network from '../Network.js';\r\n\r\nfunction PostArtist(props) {\r\n\r\n  const user = useContext(UserContext)\r\n\r\n  const addArtist = async (event, name, image) => {\r\n  event.preventDefault();\r\n  const date = new Date();\r\n\r\n    try{\r\n    await network.post(`/api/artists`, {\r\n    name: name, \r\n    cover_img: image,\r\n    username: user.username,\r\n    upload_at: date.toISOString().substring(0, 10)\r\n    })\r\n  document.getElementById(\"artistForm\").reset();\r\n} catch (response){\r\n   document.getElementById('artistError').innerHTML = \"Only registered users can post new artists to the website\";\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet name;\r\nlet image;\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n      function insertImage(event) {\r\n        image = event.target.value;\r\n      }\r\n\r\nreturn (\r\n <form id=\"artistForm\" onSubmit={(event) => addArtist(event, name, image)}>\r\n   <div>\r\n    <label> Name of the Artist: </label><br/>\r\n    <input id=\"artist_name\" required type=\"text\" defaultValue={name} onChange={insertName}/> <br/><br/>\r\n  <br/> <br/>\r\n    <label> Artist image URL </label><br/>\r\n    <input id=\"artist_img\" required type=\"text\" defaultValue={image} onChange={insertImage}/><br/><br/>\r\n  <br/> <br/>\r\n    <input type='submit' className=\"post\" value=\"Post Artist\"/>\r\n    <NavLink style={{marginTop:'-50px'}} className=\"fa fa-arrow-left back\" to=\"/Artists\"></NavLink>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div className=\"artistForm\"> \r\n{form()}\r\n<p id=\"artistError\" style={{marginTop:\"-2px\", marginLeft:\"120px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostArtist;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useContext, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport UserContext from '../UserContext'\r\nimport network from '../Network.js';\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction PostPlaylist(props) {\r\nconst [songs, setSongs] = useStateIfMounted([])\r\n\r\nconst user = useContext(UserContext)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n    const songs = await axios.get(`/api/songs`);\r\n    let selectSong = songs.data.map(e => { return { artist: e.Artist.name, value: e.youtube_id, label: `${e.title} - ${e.Artist.name}`}} )\r\nsetSongs(selectSong)\r\n\r\n    }; fetchData();\r\n   }, []); \r\n\r\n  const addPlaylist = async (event, name, songs, image) => {\r\n  event.preventDefault();\r\n  const date = new Date();\r\n\r\n\r\n    if(!songs) {\r\n    return document.getElementById('playlistError').innerHTML = \"Select songs\";\r\n    }\r\n    try{\r\n    await network.post(`/api/playlists`, {\r\n    name: name, \r\n    username: user.username,\r\n    cover_img: image,\r\n    created_at: date.toISOString().substring(0, 10)\r\n    }).then( async (result) => {\r\n    await network.post(`/api/songinplaylist`, {\r\n    id: result.data.id, \r\n    songs: JSON.stringify(songs)\r\n    })\r\n    })\r\n  window.location.reload(false);\r\n  document.getElementById(\"playlistForm\").reset();\r\n} catch (response){\r\ndocument.getElementById('playlistError').innerHTML = 'Only registered users can post new playlists to the website!';\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet name;\r\nlet image;\r\nlet song;\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n      function insertImage(event) {\r\n        image = event.target.value;\r\n      }\r\n\r\n      function insertSongs(event) {\r\n        song = event;\r\n      }\r\n\r\nlet selectSong = songs\r\n\r\n\r\nreturn (\r\n <form style={{marginTop:\"150px\"}} id=\"playlistForm\" onSubmit={(event) => addPlaylist(event, name, song, image)}>\r\n   <div>\r\n    <label> Name of the Playlist: </label><br/>\r\n    <input id=\"playlist_name\" required type=\"text\" defaultValue={name} onChange={insertName}/> <br/><br/>\r\n    <br/>\r\n    <label> Songs: </label><br/>\r\n    <Select\r\n    required\r\n    maxMenuHeight={160}\r\n    isMulti\r\n    defaultValue={song}\r\n    onChange={insertSongs}\r\n    options={selectSong}>\r\n    </Select><br/>\r\n    <br/>\r\n    <label> Cover image URL </label><br/>\r\n    <input id=\"artist_img\" required type=\"text\" defaultValue={image} onChange={insertImage}/><br/><br/>\r\n  <br/>\r\n    <input type='submit' className=\"post\" value=\"Post Playlist\"/>\r\n   <NavLink  style={{marginTop:'-50px'}} className=\"fa fa-arrow-left back\"  to=\"/Playlists\"></NavLink>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div className=\"playlistForm\"> \r\n{form()}<p id=\"playlistError\" style={{marginLeft:\"120px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostPlaylist;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useContext} from 'react';\r\nimport {\r\n  NavLink,\r\n   useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport UserContext from '../UserContext'\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nexport default function Uploads(props){\r\nconst [search, setSearch] = useStateIfMounted(undefined)\r\n\r\nlet match = useRouteMatch();\r\n\r\nconst user = useContext(UserContext)\r\n\r\nreturn(\r\n<div style={{position:'relative', width:\"92%\", top:'0px'}}>\r\n<p className='listTitle'>Search user</p>\r\n<input className=\"filterList\" onChange={(event) => setSearch(event.target.value)} /> \r\n<NavLink to={search ? `${match.url}/${search}` : `${match.url}`}>\r\n<button className=\"searchButton\">Search</button>\r\n</NavLink>\r\n{ user ? \r\n<NavLink to={`${match.url}/${user.username}`}>\r\n<button style={{position:'relative', textAlign:\"right\", width:\"108%\", top:\"550px\", marginBottom:\"0px\"}} className=\"post\">To my uploads</button>\r\n</NavLink> : '' }\r\n</div>\r\n)\r\n}\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction NoFound() {\r\nconst [unfound, setUnfound] = useState(undefined)\r\nconst [loading, setLoading] = useState(true);\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      setUnfound(page)\r\n      setLoading(false)\r\n    }; fetchData();\r\n   }, [])\r\n\r\n let page =\r\n<div>\r\n<p style={{height:\"100px\", marginTop:\"-50px\", fontSize:\"400px\",textAlign:\"center\",width:\"825px\"}} className=\"dataTitle\">404</p>\r\n<p style={{marginBottom:\"-100px\", position:'relative', fontSize:\"120px\",textAlign:\"right\",width:'95%'}} className=\"listTitle\">Page not found</p>\r\n</div>\r\n\r\n  const override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n  return (\r\n<div>\r\n  <LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n{unfound}\r\n</div>\r\n  )}\r\n  \r\nexport default NoFound;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\nimport ReactPlayer from 'react-player/youtube'\r\n\r\nfunction AlbumData(props) {\r\n\r\nconst [album, setAlbum] = useStateIfMounted(undefined);\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\n\r\nlet { albumId } = useParams();\r\n\r\n\r\n   useEffect(() => {\r\n  const fetchData = async () => {\r\n      try{\r\n      const { data } = await axios.get(`/api/albums/${albumId}`)\r\n      makeID(data.album, data.songs)\r\n      } catch(response) {\r\n        setLoading(false)\r\n  return setAlbum(<p style={{top:\"430px\", fontSize:\"120px\",textAlign:\"right\",width:\"86%\"}} className=\"listTitle\">Unknown album</p>)\r\n  }\r\n    }; fetchData();\r\n   }, [])\r\n\r\n\r\nconst makeID = (e, songs) => {\r\n\r\nlet url = [];\r\n\r\nlet list = songs.map(e => {\r\nurl.push(`https://www.youtube.com/watch?v=${e.youtube_id}`)\r\nreturn (\r\n<li key={e.youtube_id} className=\"item\">\r\n<NavLink className=\"navTo\" to={`/songs/${e.youtube_id}?album=${albumId}`} >\r\n<span>\t&#119136; &nbsp; {e.title} </span>\r\n<span style={{float:\"right\"}}>{e.length}</span>\r\n</NavLink>\r\n</li>\r\n)\r\n})    \r\n\r\nlet x = () => {\r\nreturn (\r\n<div style={{marginLeft:'50px'}}>\r\n<p className=\"dataTitle\">{e.name}</p>\r\n\r\n<div style={{width:'100%', marginTop:'-60px', color:\"white\", display:\"flex\"}}>\r\n\r\n<div style={{fontSize:'20px', width:'36%', marginRight:\"2%\"}}>\r\n<ReactPlayer playing url={url} controls={true} width=\"100%\" height=\"450px\" /><br/>\r\n<i><strong>{e.is_liked}</strong> people liked this album</i><br/>\r\n<br/><br/>\r\n<i><strong>Artist:</strong>{\" \"} {e.Artist.name}</i><br/>\r\n<i><strong>Release date:</strong>{\" \"} {e.created_at.substr(0, 10)}</i>\r\n</div>\r\n\r\n<div style={{width:'62%'}}>\r\n<h6 className=\"songsTitle\">Songs</h6>\r\n<div className=\"dataItem\">\r\n{list}\r\n</div>\r\n\r\n</div>\r\n</div>\r\n<NavLink className=\"fa fa-arrow-left back\" to=\"/albums\"></NavLink>\r\n</div>\r\n);\r\n}\r\nsetAlbum(x)\r\nsetTimeout(() => {\r\nsetLoading(false) \r\n}, 1500);\r\n}\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n\r\n  return (\r\nalbum ? <div>\r\n  <LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n{album}\r\n</div>\r\n: null\r\n  );\r\n  }\r\n\r\nexport default AlbumData;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction ArtistData(props) {\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\nconst [artist, setArtist] = useStateIfMounted(undefined)\r\n\r\nlet { artistId } = useParams();\r\n\r\nuseEffect(() => {\r\n  const fetchData = async () => {\r\n      try{\r\n      const { data } = await axios.get(`/api/artists/${artistId}`)\r\n      makeID(data.artist, data.albums, data.songs)\r\n  } catch(response) {\r\n        setLoading(false)\r\n    return setArtist(<p style={{top:\"430px\", fontSize:\"120px\",textAlign:\"right\",width:\"86%\"}} className=\"listTitle\">Unknown artist</p>)\r\n  }\r\n    }; fetchData();\r\n   }, [])\r\n\r\n\r\nfunction makeID(e, albums, songs){\r\nlet z = 100;\r\n\r\nlet songList = songs.map(e => {\r\nz--;\r\n\r\nreturn (\r\n<li key={e.youtube_id} className=\"item\">\r\n<NavLink className=\"navTo\" to={`/songs/${e.youtube_id}?artist=${artistId}`} >\r\n<span>\t&#119136; &nbsp; {e.title} </span>\r\n<span style={{float:\"right\"}}>{e.length}</span>\r\n</NavLink>\r\n</li>   \r\n)})\r\n\r\nlet albumList = albums.map(e => {\r\nreturn (\r\n<div style={{zIndex:z}} key={e.name} className=\"hov grid-item3\">\r\n<NavLink className=\"navTo\" to={`/albums/${e.id}?artist=${artistId}`}>\r\n<img onError={(e)=>{e.target.onerror = null; e.target.src=\"/no_image.jpg\"}} alt={e.name} width=\"200\" height=\"200\" src={e.cover_img}></img>\r\n</NavLink>\r\n<p>\r\n<NavLink className=\"navTo\" to={`/albums/${e.id}?artist=${artistId}`}>{e.name}</NavLink>\r\n</p>\r\n</div>   \r\n)\r\n})    \r\n\r\nlet x = () => {\r\nreturn (\r\n<div style={{marginLeft:'50px', width:\"96.5%\"}}>\r\n<p className=\"dataTitle\">{e.name}</p>\r\n<br/><br/>\r\n\r\n<div style={{width:'100%', marginTop:'-105px', color:\"white\", display:\"flex\"}}>\r\n\r\n<div style={{fontSize:'20px', width:'36%', marginRight:\"2%\"}}>\r\n<img onError={(e)=>{e.target.onerror = null; e.target.src=\"/no_image.jpg\"}} alt={e.name} width=\"100%\" height=\"450px\" src={e.cover_img}></img>\r\n<br/>\r\n<i><strong>{e.is_liked}</strong> people liked this artist</i><br/>\r\n\r\n</div>\r\n\r\n<div style={{width:'62%', marginLeft:'40px'}}>\r\n<h6 className=\"songsTitle\">Songs</h6>\r\n<div className=\"dataItem\">\r\n{songList}\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<h6 style={{textAlign:\"left\", left:\"10px\", marginTop:'0px'}} className=\"songsTitle\">Albums</h6>\r\n<div className=\"artistData\">\r\n{albumList}\r\n</div>\r\n\r\n<NavLink className=\"fa fa-arrow-left back\" to=\"/artists\"></NavLink>\r\n</div>\r\n)}\r\nsetArtist(x)\r\nsetTimeout(() => {\r\nsetLoading(false) \r\n}, 1500);\r\n}\r\n\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n  return (\r\n<div>\r\n  <LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n{artist}\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default ArtistData;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction PlaylistData(props) {\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\nconst [playlist, setPlaylist] = useStateIfMounted(undefined)\r\nlet { playlistId } = useParams();\r\n\r\nuseEffect(() => {\r\n  const fetchData = async () => {\r\n      try{\r\n      const { data } = await axios.get(`/api/playlists/${playlistId}`);\r\n      const songs = await axios.get(`/api/songinplaylist/${playlistId}`)\r\n      makeID(data, songs.data)\r\n  } catch(response) {\r\n        setLoading(false)\r\n    return setPlaylist(<p style={{top:\"430px\", fontSize:\"120px\",textAlign:\"right\",width:\"86%\"}} className=\"listTitle\">Unknown playlist</p>)\r\n  }\r\n    }; fetchData();\r\n   }, [])\r\n\r\n  \r\n\r\nfunction makeID(e, songs){\r\n\r\nlet url = [];\r\n\r\nlet list = songs.map(e => {\r\nurl.push(`https://www.youtube.com/watch?v=${e.Song.youtube_id}`)\r\nreturn (\r\n<li key={e.Song.youtube_id} className=\"item\">\r\n<NavLink className=\"navTo\" to={`/songs/${e.Song.youtube_id}?playlist=${playlistId}`}>\r\n<span>\t&#119136; &nbsp; {e.Song.title} - {e.artist} </span>\r\n<span style={{float:\"right\"}}>{e.Song.length}</span>\r\n</NavLink>\r\n</li>   \r\n)\r\n})    \r\n\r\nlet x = () => {\r\nreturn (\r\n<div style={{marginLeft:'50px'}}>\r\n<p className=\"dataTitle\">{e.name}</p>\r\n<br/><br/>\r\n<div style={{width:'100%',marginTop:'-105px', color:\"white\", display:\"flex\"}}>\r\n<div style={{fontSize:'20px', width:'36%', marginRight:\"2%\"}}>\r\n<ReactPlayer playing url={url} controls={true} width=\"100%\" height=\"450px\" />\r\n<br/>\r\n<i><strong>{e.is_liked}</strong> people liked this playlist</i>\r\n<br/><br/><br/>\r\n<i><strong>Created by:</strong>{\" \"} {e.username}</i><br/><br/><br/>\r\n</div>\r\n<div style={{width:'62%'}}>\r\n<h6 className=\"songsTitle\">Songs</h6>\r\n<div className=\"dataItem\">\r\n{list}\r\n</div>\r\n</div>\r\n</div>\r\n<NavLink className=\"fa fa-arrow-left back\" to=\"/playlists\"></NavLink>\r\n</div>\r\n)}\r\nsetPlaylist(x)\r\nsetTimeout(() => {\r\nsetLoading(false) \r\n}, 1500);\r\n}\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n  return (\r\n<div>\r\n  <LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n{playlist}\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PlaylistData;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  useParams,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport YouTube from 'react-youtube';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\n\r\nfunction SongData(props) {\r\nconst [song, setSong] = useStateIfMounted(undefined)\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\n\r\nlet { songId } = useParams();\r\n\r\nlet match = useRouteMatch();\r\n\r\nconst playCount = async (e) => {\r\nawait axios.patch(`/api/songs/count/${e.youtube_id}`, {\r\nplay_count: e.play_count + 1,\r\n});\r\n};\r\nuseEffect(() => {\r\n  const fetchData = async () => {\r\n      try{\r\n      const { data } = await axios.get(`/api/songs/${songId}`)\r\n      makeID(data)\r\n  } catch(response) {\r\n        setLoading(false)\r\n      console.log(response)\r\n    return setSong(<p style={{top:\"430px\", fontSize:\"120px\",textAlign:\"right\",width:\"86%\"}} className=\"listTitle\">Unknown song</p>)\r\n  }\r\n    }; fetchData();\r\n   }, [])\r\n\r\n\r\n       \r\nfunction makeID(e){\r\nlet lyrics = '' \r\nlyrics = e.lyrics.split(\"&&\").map(function(item, idx) {\r\n        return (\r\n            <span key={idx}>\r\n                {item}\r\n                <br/>\r\n            </span>\r\n         )}) \r\n\r\nlet x = () => {\r\nreturn(\r\n  <div>\r\n<div  style={{marginLeft:'50px'}}>\r\n<p className=\"dataTitle\">{e.title}</p>\r\n<br/>\r\n<div className=\"songDataPage\">\r\n\r\n<div>\r\n<YouTube className=\"video\" onPlay={() => playCount(e)} videoId={e.youtube_id} id=\"video\" opts={{width:\"500\",height:\"500\"}}/>\r\n<br/>\r\n<i><strong>{e.is_liked}</strong>  people liked this song</i><br/><br/>\r\n<i><strong>Views:</strong>{\" \"} {e.play_count}</i><br/>\r\n\r\n<i className=\"hov\"><strong>Artist:</strong>\r\n<a>\r\n<NavLink className=\"navTo\" to={`/artists/${e.Artist.id}`}>\r\n{\" \"} {e.Artist.name}\r\n</NavLink>\r\n</a>\r\n</i><br/>\r\n\r\n<i className=\"hov\"><strong>Album:</strong>\r\n<a>\r\n<NavLink className=\"navTo\" to={`/artists/${e.Album.id}`}>\r\n{\" \"} {e.Album.name}\r\n</NavLink>\r\n</a>\r\n</i><br/>\r\n<i><strong>Release date:</strong>{\" \"} {e.created_at.substr(0, 10)}</i>\r\n</div>\r\n\r\n\r\n<div className=\"dataLyrics\">\r\n<strong style={{fontSize:\"30px\"}}>Lyrics:</strong><br/>\r\n<br/>\r\n{lyrics}\r\n</div>\r\n</div>\r\n</div>\r\n<br/><br/>\r\n<NavLink style={{marginTop:'0px', marginLeft:'50px'}}  className=\"fa fa-arrow-left back\" to=\"/songs\"></NavLink>\r\n</div>\r\n)}\r\nsetSong(x)\r\nsetLoading(false)\r\n}\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n  return (\r\n<div>\r\n  <LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n{song}\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default SongData;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useContext, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport {\r\nNavLink,\r\nuseParams,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport UserContext from '../UserContext'\r\nimport network from '../Network.js';\r\nimport { useStateIfMounted } from \"use-state-if-mounted\";\r\nimport { useConfirm } from \"material-ui-confirm\";\r\n\r\nexport default function UploadsData(props) {\r\nconst [loading, setLoading] = useStateIfMounted(true);\r\nconst [toggle, setToggle] = useStateIfMounted(false);\r\nconst [name, setName] = useStateIfMounted('Uploads')\r\nconst [uploads, setUploads] = useStateIfMounted('')\r\nconst confirm = useConfirm();\r\n\r\nconst user = useContext(UserContext)\r\n\r\nlet { userId } = useParams()\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n      const { data } = await axios.get(`/api/users/uploads/${userId}`)\r\n      makeLists(data.user, data.songs, data.albums, data.artists, data.playlists)\r\n      } catch {\r\n    setLoading(false)\r\n    return setUploads(<p style={{top:\"430px\", fontSize:\"120px\",textAlign:\"right\",width:\"86%\"}} className=\"listTitle\">User doesn't exist</p>)\r\n      }\r\n    }; fetchData();\r\n   }, [toggle, user, name])\r\n\r\nconst playCount = async (e) => {\r\nawait axios.patch(`/api/songs/count/${e.youtube_id}`, {\r\nplay_count: e.play_count + 1,\r\n});\r\n};\r\n\r\nconst deleteSong = async (e) => {\r\nconfirm({ description: `This will permanently delete ${e.title}.` })\r\n.then( async () => { await network.delete(`/api/songs/${e.youtube_id}`); setToggle(!toggle)})\r\n.catch(() => {return});\r\n};\r\nconst deleteArtist = async (e) => {\r\nconfirm({ description: `This will permanently delete ${e.name}.` })\r\n.then( async () => { await network.delete(`/api/artists/${e.id}`); setToggle(!toggle)})\r\n.catch(() => {return});\r\n};\r\nconst deleteAlbum = async (e) => {\r\nconfirm({ description: `This will permanently delete ${e.name}.` })\r\n.then( async () => { await network.delete(`/api/albums/${e.id}`); setToggle(!toggle)})\r\n.catch(() => {return});\r\n};\r\n\r\nconst deletePlaylist = async (e) => {\r\nconfirm({ description: `This will permanently delete ${e.name}.` })\r\n.then( async () => { await network.delete(`/api/playlists/${e.id}`); setToggle(!toggle)})\r\n.catch(() => {return});\r\n};\r\n\r\n\r\nconst makeLists = (username, songs, albums, artists, playlists) => {\r\n\r\nlet capitalUserId = userId.charAt(0).toUpperCase() + userId.slice(1)\r\nif (user) {\r\nif(user.username.toUpperCase() === userId.toUpperCase()){\r\nsetName('My Uploads') \r\n} else {\r\nsetName(`${capitalUserId}'s Uploads`)\r\n}\r\n}\r\n\r\nlet sArray = songs.map(e => {\r\nconst deleteButton = user && user.email === e.user ? <button onClick={() => deleteSong(e)} style={{marginBottom:\"15px\", marginTop:'30px'}} className=\"fa fa-remove\"></button> : ''\r\n\r\nreturn (\r\n<li key={e.youtube_id} className=\"hov\">\r\n<YouTube className=\"video\" onPlay={() => playCount(e)}videoId={e.youtube_id} id=\"video\" opts={{width:\"250\",height:\"250\"}}/>\r\n<span  style={{cursor:'pointer'}} >\r\n{deleteButton}\r\n</span>\r\n<p style={{marginTop:'21px', width: deleteButton ? '220px' : null}}>\r\n<NavLink className=\"navTo\" to={`/songs/${e.youtube_id}`}>\r\n{e.title}\r\n</NavLink>\r\n</p>\r\n<br/>\r\n</li>\r\n)\r\n\r\n}\r\n)\r\n\r\n\r\nlet alArray = albums.map(e => {\r\nconst deleteButton = user && user.email === e.user ? <button onClick={() => deleteAlbum(e)} className=\"fa fa-remove\"></button> : ''\r\nreturn (\r\n<li key={e.name} className=\"hov\">\r\n<NavLink className=\"navTo\" to={`/albums/${e.id}`}>\r\n<img onError={(e)=>{e.target.onerror = null; e.target.src=\"/no_image.jpg\"}} alt={e.name} width=\"250\" height=\"250\" src={e.cover_img}></img>\r\n</NavLink>\r\n<span style={{cursor:'pointer'}} >\r\n{deleteButton}\r\n</span>\r\n<p style={{width: deleteButton ? '220px' : null}}>\r\n<NavLink className=\"navTo\" to={`/albums/${e.id}`}>\r\n{e.name}\r\n</NavLink>\r\n</p>\r\n<br/>\r\n</li>\r\n)}\r\n)\r\n\r\nlet arArray = artists.map(e => {\r\nconst deleteButton = user && user.email === e.user ? <button onClick={() => deleteArtist(e)} className=\"fa fa-remove\"></button> : ''\r\nreturn (\r\n<li key={e.name} className=\"hov\">\r\n<NavLink className=\"navTo\"  to={`/artists/${e.id}`}>\r\n<img onError={(e)=>{e.target.onerror = null; e.target.src=\"/no_image.jpg\"}} alt={e.name} width=\"250\" height=\"250\" src={e.cover_img}></img>\r\n</NavLink>\r\n<span style={{cursor:'pointer'}} >\r\n{deleteButton}\r\n</span>\r\n<p style={{width: deleteButton ? '220px' : null}}>\r\n<NavLink className=\"navTo\" to={`/artists/${e.id}`}>\r\n{e.name}\r\n</NavLink>\r\n</p>\r\n<br/> \r\n</li>\r\n)}\r\n) \r\nlet pArray = playlists.map(e => {\r\nconst deleteButton = user && user.email === e.user ? <button onClick={() => deletePlaylist(e)} className=\"fa fa-remove\"></button> : null\r\nreturn (\r\n<li key={e.name} className=\"hov\">\r\n<NavLink className=\"navTo\" to={`/playlists/${e.id}`}>\r\n<img onError={(e)=>{e.target.onerror = null; e.target.src=\"/no_image.jpg\"}} alt={e.name} width=\"250\" height=\"250\" src={e.cover_img}></img>\r\n</NavLink>\r\n<span style={{cursor:'pointer'}} >\r\n{deleteButton}\r\n</span>\r\n<p style={{width: deleteButton ? '220px' : null}}>\r\n<NavLink className=\"navTo\"  to={`/playlists/${e.id}`}>\r\n{e.name}\r\n</NavLink>\r\n</p>\r\n<br/>\r\n</li>\r\n)}\r\n)\r\n\r\nlet x = () => {\r\nreturn(\r\n<div>\r\n<p id=\"listTitle\" className='listTitle'>{name}</p>\r\n<br/><br/>\r\n<div className='uploadsList'>\r\n<h6 className=\"upTitle\">Songs</h6>\r\n<ScrollContainer className=\"upload\" >\r\n{sArray}\r\n</ScrollContainer>\r\n\r\n<h6 className=\"upTitle\">Albums</h6>\r\n<ScrollContainer className=\"upload\" >\r\n{alArray}\r\n</ScrollContainer>\r\n\r\n<h6 className=\"upTitle\">Artists</h6>\r\n<ScrollContainer className=\"upload\" >\r\n{arArray}\r\n</ScrollContainer>\r\n  <h6 className=\"upTitle\">Playlists</h6>\r\n<ScrollContainer className=\"upload\" >\r\n  {pArray}\r\n  </ScrollContainer>\r\n   <NavLink className=\"fa fa-arrow-left back\"  to=\"/Uploads\"></NavLink>\r\n<br/><br/>\r\n</div>\r\n</div> \r\n)}\r\nif(username === \"user doesn't exist\"){\r\nsetUploads(<p style={{top:\"440px\", fontSize:\"120px\",textAlign:\"right\",width:\"86%\"}} className=\"listTitle\">User doesn't exist</p>)\r\n} else {\r\nsetUploads(x)\r\n}\r\nsetLoading(false)\r\n}\r\n\r\nconst override =`\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  margin-top:200px;\r\n  left: 40%;\r\n`;\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"uploadsPage\">\r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  </LoadingOverlay>\r\n  <br/>\r\n  {uploads}\r\n</div>\r\n  );\r\n  }\r\n","/* eslint-disable eqeqeq */\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport './Page.css';\r\nimport Home from './components/Home.js'\r\nimport Songs from './components/Songs.js'\r\nimport Artists from './components/Artists.js'\r\nimport Playlists from './components/Playlists.js'\r\nimport Albums from './components/Albums.js'\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport PostSong from './components/PostSong.js';\r\nimport PostAlbum from './components/PostAlbum.js';\r\nimport PostArtist from './components/PostArtist.js';\r\nimport PostPlaylist from './components/PostPlaylist.js';\r\nimport Uploads from './components/Uploads.js';\r\nimport NoFound from './NoFound.js';\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Slide from '@material-ui/core/Slide';\r\nimport network from './Network.js';\r\nimport { UserProvider } from './UserContext'\r\nimport AlbumData from './components/AlbumData.js';\r\nimport ArtistData from './components/ArtistData.js';\r\nimport PlaylistData from './components/PlaylistData.js';\r\nimport SongData from './components/SongData.js';\r\nimport UploadsData from './components/UploadsData.js';\r\nimport { ConfirmProvider } from \"material-ui-confirm\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction App() {\r\nconst [registerOpen, setRegisterOpen] = useState(false)\r\nconst [loginOpen,setLoginOpen] = useState(false)\r\nconst [user, setUser] = useState(undefined);\r\n\r\nuseEffect(() => {\r\nconst autoLogin = async () => {\r\ntry {\r\nvar date = new Date();\r\nconst { data } = await network.patch(`/api/users/auto`, {\r\nlast_login: date.toISOString().substring(0, 10),\r\n});\r\nsetUser(data)\r\n} catch { return }\r\n}; autoLogin();\r\n}, [])\r\n\r\nconst handleLogout = () => {\r\nsetUser(undefined)\r\nlocalStorage.clear();\r\n}\r\n\r\n\r\n  const handleRegister = async (username, password, repassword) => {\r\n    try{\r\n    if (password !== repassword){\r\n    return document.getElementById('errorMessage').innerHTML='Password fields do not match';\r\n           }\r\n      let occupied = await axios.get(`api/users/${username}`)  \r\n      if(occupied.data && occupied.data.username){\r\n      return document.getElementById('errorMessage').innerHTML = 'Username is already in use';\r\n      } else {\r\n      const { data } = await network.post(`/api/users/register`, {\r\n      username: username,\r\n      password: password,\r\n      })\r\nif (data && data.success && data.token) {\r\nlocalStorage.setItem('token', data.token);\r\nsetRegisterOpen(false)   \r\nsetTimeout(() => {\r\nsetUser(data.user)\r\n}, 500);\r\n} else {\r\n  document.getElementById('errorMessage').innerHTML = data.message\r\n}\r\n    }\r\n  } catch (response){\r\n  document.getElementById('errorMessage2').innerHTML= response;\r\n  }; \r\n  }\r\n\r\n    const handleLogin = async (username, password) => {\r\n    try{\r\n      const { data } = await network.post(`/api/users/login`, {\r\n      username: username,\r\n      password: password,\r\n    });\r\nif (data && data.success && data.token) {\r\nlocalStorage.setItem('token', data.token);\r\nsetLoginOpen(false)   \r\nsetTimeout(() => {\r\nsetUser(data.user)\r\n}, 500);\r\n} else {\r\n  document.getElementById('errorMessage').innerHTML = data.message\r\n}\r\n  } catch (response) {\r\n  document.getElementById('errorMessage').innerHTML = response.message\r\n  }; \r\n};\r\n\r\n\r\nfunction login(){\r\nlet username;\r\nlet password;\r\n\r\n      function insertUsername(event) {\r\n        username = event.target.value;\r\n      }\r\n\r\n      function insertPassword(event) {\r\n        password = event.target.value;\r\n      }\r\n\r\nreturn (\r\n  <span>\r\n<Button style={{fontSize:\"20px\", marginLeft:'255px'}} variant=\"text\" color=\"inherit\" onClick={() => setLoginOpen(true)}>\r\n        Login\r\n      </Button>\r\n      <Dialog TransitionComponent={Transition} open={loginOpen} onClose={() => setLoginOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            onChange={insertUsername}\r\n            defaultValue={username}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            type=\"username\"\r\n            required\r\n            inputProps={{maxLength: 12}}\r\n            fullWidth\r\n          />\r\n            <TextField\r\n            onChange={insertPassword}\r\n            autoFocus\r\n            defaultValue={password}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            required\r\n            minLength={{maxLength: 36}}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogTitle style={{color:'red'}} id=\"errorMessage\"></DialogTitle>\r\n        <DialogActions>\r\n          <Button type=\"submit\" onClick={() => setLoginOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleLogin(username, password)} color=\"primary\">\r\n            login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </span>\r\n)}\r\n\r\nfunction register(){\r\nlet username;\r\nlet password;\r\nlet repassword\r\n\r\n      function insertUsername(event) {\r\n        username = event.target.value;\r\n      }\r\n\r\n      function insertPassword(event) {\r\n        password = event.target.value;\r\n      }\r\n\r\n      function insertRePassword(event) {\r\n        repassword = event.target.value;\r\n      }\r\n\r\nreturn (\r\n  <span>\r\n<Button style={{fontSize:\"20px\"}} variant=\"text\" color=\"inherit\" onClick={() => setRegisterOpen(true)}>\r\n        Register\r\n      </Button>\r\n      <Dialog TransitionComponent={Transition} open={registerOpen} onClose={() => setRegisterOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Register</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            onChange={insertUsername}\r\n            autoFocus\r\n            required\r\n            margin=\"dense\"\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            type=\"name\"\r\n            inputProps={{maxLength: 12}}\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            onChange={insertPassword}\r\n            autoFocus\r\n            required\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            inputProps={{maxLength: 36}}\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            onChange={insertRePassword}\r\n            autoFocus\r\n            required\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Confirm password\"\r\n            autoComplete=\"\"\r\n            type=\"password\"\r\n            minLength={{maxLength: 36}}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogTitle style={{color:'red'}} id=\"errorMessage\"></DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setRegisterOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleRegister(username, password, repassword)} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </span>\r\n)}\r\n\r\nconst logout =\r\n<Button style={{fontSize:\"20px\"}} variant=\"text\" color=\"inherit\" onClick={() => handleLogout()}>\r\nLogout\r\n</Button>\r\n\r\nconst platform = user ? <h5> <Button disabled={true} style={{fontSize:\"20px\", color:\"rgb(180, 60, 60)\"}} variant=\"text\">{user.username}</Button> | {logout} </h5> :  <h5> {login()} | {register()} </h5>\r\n\r\n\r\nconst AnimatedSwitch = withRouter(({ location }) => (\r\n  <TransitionGroup >\r\n    <CSSTransition key={location.key} classNames=\"page\" timeout={1000}>\r\n<ConfirmProvider>\r\n<UserProvider value={user}>\r\n      <Switch location={location}>\r\n<Route exact path=\"/\" component={() => <Home/>}/>\r\n<Route exact path=\"/songs\" component={() => <Songs/>}/>\r\n<Route exact path=\"/songs/:songId\" component={() => <SongData/>}/>\r\n<Route exact path=\"/artists\" component={() => <Artists/>}/>\r\n<Route exact path=\"/artists/:artistId\" component={() => <ArtistData/>}/>\r\n<Route exact path=\"/playlists\" component={() => <Playlists/>}/>\r\n<Route exact path=\"/playlists/:playlistId\" component={() => <PlaylistData/>}/>\r\n<Route exact path=\"/albums\" component={() => <Albums/>}/>\r\n<Route exact path=\"/albums/:albumId\" component={() => <AlbumData/>}/>\r\n<Route exact path=\"/uploads\" component={() => <Uploads/>}/>\r\n<Route exact path=\"/uploads/:userId\" component={() => <UploadsData/>}/>\r\n<Route exact path=\"/PostSong\" component={() => <PostSong/>}/>\r\n<Route exact path=\"/PostAlbum\" component={() => <PostAlbum/>}/>\r\n<Route exact path=\"/PostArtist\" component={() => <PostArtist/>}/>\r\n<Route exact path=\"/PostPlaylist\" component={() => <PostPlaylist/>}/>\r\n<Route component={() => <NoFound/>}/>\r\n      </Switch>\r\n</UserProvider>\r\n</ConfirmProvider>\r\n    </CSSTransition>\r\n  </TransitionGroup>\r\n));\r\n\r\n  return (\r\n<div className=\"App\">\r\n{platform}\r\n   <div className=\"nav\">\r\n            <NavLink to=\"/\"><i style={{ fontSize:'44px', paddingTop:\"3px\", fontWeight:'normal'}} className=\"navItem fa fa-fw fa-home\" /></NavLink>\r\n            <NavLink className=\"navItem\" to=\"/songs\">Songs</NavLink>\r\n            <NavLink className=\"navItem\" to=\"/albums\">Albums</NavLink>\r\n            <NavLink className=\"navItem\" to=\"/artists\">Artists</NavLink>\r\n            <NavLink className=\"navItem\" to=\"/playlists\">Playlists</NavLink>\r\n            <NavLink className=\"navItem\" to=\"/Uploads\">Uploads</NavLink>\r\n    </div>\r\n      <AnimatedSwitch />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}