{"version":3,"sources":["components/Home.js","components/PostSong.js","components/Songs.js","components/Artists.js","components/Playlists.js","components/Albums.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","useState","songs","setSongs","albums","setAlbums","artists","setArtists","playlists","setPlaylists","useEffect","a","axios","get","data","splice","makeLists","fetchData","playCount","e","put","song_id","youtube_id","count","play_count","sArray","map","key","title","className","onPlay","videoId","id","opts","width","height","alArray","name","alt","src","cover_img","arArray","pArray","user","PostSong","addSong","length","artist","album","track_number","lyrics","created_at","newCreated_at","slice","newLyrics","replace","test","post","document","getElementById","reset","innerHTML","alert","onSubmit","required","type","defaultValue","onChange","event","target","value","class","rows","form","to","path","component","style","marginTop","marginLeft","fontSize","color","Songs","list","setList","search","setSearch","preferences","setPreferences","admin","setAdmin","toggleDelete","setToggleDelete","pref","is_admin","JSON","parse","filter","toUpperCase","includes","makeSongs","deleteSong","newId","delete","isLiked","email","x","console","log","array","heart","like","adminDelete","onClick","cursor","placeholder","Artists","makeArtists","Playlists","makePlaylists","Albums","makeAlbums","App","registerOpen","setRegisterOpen","loginOpen","setLoginOpen","undefined","setUser","localStorage","getItem","autoLogin","handleLogout","clear","validateEmail","mail","handleRegister","password","repassword","handleLogin","setItem","setTimeout","logout","Button","variant","platform","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","fullWidth","DialogActions","login","register","Toggle","Nav","defaultSelected","eventKey","paddingTop","exact","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c4e0058.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\n\r\nfunction Home(props) {\r\nconst [songs, setSongs] = useState([]);\r\nconst [albums, setAlbums] = useState([]);\r\nconst [artists, setArtists] = useState([]);\r\nconst [playlists, setPlaylists] = useState([]);\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      const songs = await (await axios.get(`/top_songs`)).data.splice(0, 20);\r\n      const albums = await (await axios.get(`/top_albums`)).data.splice(0, 20);\r\n      const artists = await (await axios.get(`/top_artists`)).data.splice(0, 20);\r\n      const playlists = await (await axios.get(`/top_playlists`)).data.splice(0, 20);\r\n      makeLists(songs, albums, artists, playlists)\r\n    }; fetchData();\r\n   }, [])\r\n\r\nconst playCount = async (e) => {\r\nawait axios.put(`/count`, {\r\nsong_id: e.youtube_id,\r\ncount: e.play_count + 1,\r\n});\r\n};\r\n\r\n\r\nconst makeLists = (songs, albums, artists, playlists) => {\r\nlet sArray = songs.map(e => {\r\nreturn (\r\n<li key={e.youtube_id}>\r\n<p>{e.title}</p>\r\n<YouTube className=\"video\" onPlay={() => playCount(e)}videoId={e.youtube_id} id=\"video\" opts={{width:\"150\",height:\"150\"}}/>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\n\r\nlet alArray = albums.map(e => {\r\nreturn (\r\n<li key={e.name}>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\nlet arArray = artists.map(e => {\r\nreturn (\r\n<li key={e.name}>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\nlet pArray = playlists.map(e => {\r\nreturn (\r\n<li key={e.name}>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\nsetSongs(sArray)\r\nsetAlbums(alArray)\r\nsetArtists(arArray)\r\nsetPlaylists(pArray)\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n<h3>Hello, {props.user ? props.user.name : 'Guest'}</h3>\r\n<div className=\"lists\"> \r\n<div >\r\n<h4> Top Songs </h4> \r\n<ul className=\"songs\" >{songs}</ul>\r\n</div>\r\n\r\n\r\n<div>  \r\n<h4> Top Albums </h4>  \r\n<ul className=\"albums\">{albums}</ul>\r\n</div>\r\n\r\n\r\n<div >\r\n<h4>Top Artists</h4>\r\n<ul className=\"artists\">{artists}</ul>\r\n</div>\r\n\r\n<div>\r\n<h4>Top Playlists</h4>\r\n<ul className=\"playlists\">{playlists}</ul>\r\n</div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport Songs from './Songs.js';\r\n\r\nfunction PostSong(props) {\r\n\r\n  \r\nfunction validateDate(date) {\r\n if (/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(date))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\nfunction validateTrack(track) {\r\n   if (/^[1-9]\\d{0,1}(?:\\,\\d{1,3})?$/.test(track))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n    const addSong = async (title, length, youtube_id, artist, album, track_number, lyrics, created_at) => {\r\n  const newCreated_at = created_at.slice(0,10)\r\n  const newLyrics = lyrics.replace(`'`,`''`);\r\n    if (props.user) {\r\n    if (validateDate(newCreated_at)) {\r\n    if(validateTrack(track_number)) {\r\n    try{\r\n    await axios.post(`/song`, {\r\n    title: title, \r\n    length: length, \r\n    youtube_id: youtube_id, \r\n    artist: artist, \r\n    album: album, \r\n    track_number: track_number, \r\n    lyrics: newLyrics, \r\n    created_at: newCreated_at,\r\n    })\r\n  document.getElementById(\"songForm\").reset();\r\n} catch (response){\r\n   document.getElementById('songError').innerHTML = \"Unrecognized data / song already exists \";\r\n  }; \r\n   } else {\r\n  document.getElementById('songError').innerHTML = \"Track number field must be a number\";\r\n  }\r\n} else {\r\n   document.getElementById('songError').innerHTML = \"Release date form is invalid\";\r\n}\r\n  } else {\r\n    alert('Only registered users can post songs to the website!')\r\n  }\r\n\r\n};\r\n\r\n\r\nfunction form(){\r\nlet title;\r\nlet youtube_id;\r\nlet length;\r\nlet artist;\r\nlet album;\r\nlet track_number;\r\nlet lyrics;\r\nlet created_at\r\n\r\n\r\n      function insertTitle(event) {\r\n        title = event.target.value;\r\n      }\r\n      function insertLength(event) {\r\n        length = event.target.value;\r\n      }\r\n      function insertYoutube(event) {\r\n        youtube_id = event.target.value;\r\n      }\r\n\r\n      function insertArtist(event) {\r\n        artist = event.target.value;\r\n      }\r\n      function insertAlbum(event) {\r\n        album = event.target.value;\r\n      }\r\n      function insertTrack(event) {\r\n        track_number = event.target.value;\r\n      }\r\n\r\n      function insertLyrics(event) {\r\n        lyrics = event.target.value;\r\n      }\r\n      function insertRelease(event) {\r\n        created_at = event.target.value;\r\n      }\r\n\r\nreturn (\r\n <form id=\"songForm\" className=\"songSubmit\" onSubmit={() => addSong(title, length, youtube_id, artist, album, track_number, lyrics, created_at)}>\r\n   <div>\r\n    <label> Name of the song: </label><br/>\r\n    <input required type=\"text\" id=\"title\" defaultValue={title} onChange={insertTitle}/> <br/><br/>\r\n<label>Youtube ID: </label><i class='tooltip fas fa-info'> <span class=\"tooltiptext\">youtube.com/watch?v= (Youtube_ID)</span></i><br/>\r\n    <input required type=\"text\" id=\"youtube_id\" defaultValue={youtube_id} onChange={insertYoutube}/><br/><br/>\r\n    <label> Length: </label><br/>\r\n    <input required type=\"text\" id=\"length\" defaultValue={length} onChange={insertLength}/> <br/><br/>\r\n    <label>Artist: </label><br/>\r\n    <input required type=\"text\" id=\"artist\" defaultValue={artist} onChange={insertArtist}/><br/><br/>\r\n    <label> Album: </label><br/>\r\n    <input required type=\"text\" id=\"album\" defaultValue={album} onChange={insertAlbum}/> <br/><br/>\r\n    <label> Track number: </label><br/>\r\n    <input required type=\"text\" id=\"track_number\" defaultValue={track_number} onChange={insertTrack}/><br/><br/>\r\n     </div>\r\n     <div>\r\n        <label> Lyrics: </label><br/>\r\n    <textarea rows=\"11\" required type=\"text\" id=\"lyrics\" defaultValue={lyrics} onChange={insertLyrics}/> <br/><br/>\r\n    <label> Release date: </label><i class='tooltip fas fa-info'> <span class=\"tooltiptext\">Y Y Y Y - M M - D D</span></i><br/>\r\n    <input required type=\"text\" id=\"created_at\" defaultValue={created_at} onChange={insertRelease}/><br/><br/>\r\n    <input type='submit' id=\"postSong\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<HashRouter>\r\n<NavLink className=\"fa fa-arrow-left back\" to=\"/Songs\"></NavLink>\r\n<Route path=\"/Songs\" component={() => <Songs/>}/>\r\n</HashRouter>\r\n<p id=\"songError\" style={{marginTop:\"0px\", marginLeft:\"40px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostSong;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport PostSong from './PostSong.js';\r\n\r\nfunction Songs(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\nconst [preferences, setPreferences] = useState([])\r\nconst [admin, setAdmin] = useState(0)\r\nconst [toggleDelete, setToggleDelete] = useState(false)\r\n\r\nuseEffect(() => {\r\nif(props.user){\r\nlet pref = props.user.preferences;\r\nlet admin = props.user.is_admin;\r\nsetPreferences(JSON.parse(pref))\r\nsetAdmin(admin)\r\n}}, [props.user])\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      const songs = await (await axios.get(`/top_songs`)).data;\r\n      let list = songs.filter(e => e.title.toUpperCase().includes(search.toUpperCase()))\r\n      makeSongs(list) \r\n    }; fetchData();\r\n   }, [search, toggleDelete, preferences])\r\n\r\nconst deleteSong = async (e) => {\r\nconst newId = e.youtube_id.replace(`'`,`''`);\r\nawait axios.delete(`/song/${newId}`);\r\nsetToggleDelete(!toggleDelete)\r\n};\r\n\r\nconst playCount = async (e) => {\r\nawait axios.put(`/count`, {\r\nsong_id: e.youtube_id,\r\ncount: e.play_count + 1,\r\n});\r\n};\r\n\r\n\r\nconst isLiked = async (e) => {\r\nif (preferences.includes(e.youtube_id)){\r\nconst { data } = await axios.put(`/unlike`, {\r\npreferences: preferences,\r\nuser: props.user.email,\r\nsong_id: e.youtube_id,\r\n});\r\nlet x = JSON.parse(data[0].preferences)\r\nsetPreferences(x)\r\nconsole.log(x)\r\n} else {\r\nconst { data } = await axios.put(`/like`, {\r\nuser: props.user.email,\r\nsong_id: e.youtube_id,\r\n});\r\nlet x = JSON.parse(data[0].preferences)\r\nsetPreferences(x)\r\nconsole.log(x)\r\n}\r\n}\r\n\r\n\r\nconst makeSongs = (songs) => {\r\nlet array = songs.map(e => {\r\nconst heart = preferences.includes(e.youtube_id) ? <i id={`${e.youtube_id}like`} className=\"fas fa-heart\"></i> : <i id={`${e.youtube_id}like`} className=\"far fa-heart\"></i>\r\nconst like = props.user ? heart :  '';\r\n\r\nconst deleteButton = <button onClick={() => deleteSong(e)} className=\"deleteButton\">Delete</button>;\r\n\r\nconst adminDelete = admin === 1 ? deleteButton : '';\r\n\r\nreturn (\r\n<li key={e.youtube_id} className=\"grid-item\">\r\n<p><span style={{cursor:'pointer'}} onClick={() => isLiked(e)}>{like}</span> {e.title}</p>\r\n<YouTube className=\"video\" onPlay={() => playCount(e)} videoId={e.youtube_id} id=\"video\" opts={{width:\"150\",height:\"150\"}}/>\r\n{adminDelete}\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\n\r\n  return (\r\n<div> \r\n<p className='listTitle'>Songs</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} /> \r\n<HashRouter>\r\n{props.user ? <NavLink className=\"fa fa-plus-square-o add\" to=\"/PostSong\"></NavLink> : ''}\r\n<Route path=\"/PostSong\" component={() => <PostSong/>}/>\r\n</HashRouter>\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n\r\n\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Songs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Artists(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      const artists = await (await axios.get(`/top_artists`)).data;\r\n      let list = artists.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      makeArtists(list)\r\n    }; fetchData();\r\n   }, [search])\r\n\r\nconst makeArtists = (artists) => {\r\nlet array = artists.map(e => {\r\nreturn (\r\n<li key={e.name} className='grid-item'>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\n\r\n\r\n  return (\r\n<div> \r\n  <p className='listTitle'>Artists</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} />\r\n<i className=\"fa fa-plus-square-o add\"></i>\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Artists;\r\n","  \r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Playlists(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      const playlists = await (await axios.get(`/top_playlists`)).data;\r\n      let list = playlists.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      makePlaylists(list)\r\n    }; fetchData();\r\n   }, [search])\r\n\r\nconst makePlaylists = (playlists) => {\r\nlet array = playlists.map(e => {\r\nreturn (\r\n<li key={e.id} className='grid-item'>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\n\r\n\r\n  return (\r\n<div> \r\n<p className='listTitle'>Playlists</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} />\r\n<i className=\"fa fa-plus-square-o add\"></i>\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Playlists;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Albums(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      const albums = await (await axios.get(`/top_albums`)).data;\r\n      let list = albums.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      makeAlbums(list)\r\n    }; fetchData();\r\n   }, [search])\r\n\r\nconst makeAlbums = (albums) => {\r\nlet array = albums.map(e => {\r\nreturn (\r\n<li key={e.id} className='grid-item'>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\n\r\n\r\n  return (\r\n<div> \r\n  <p className='listTitle'>Albums</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} />\r\n<i className=\"fa fa-plus-square-o add\"></i>\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Albums;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport SideNav, {\r\n NavItem, NavIcon, NavText,\r\n} from '@trendmicro/react-sidenav';\r\nimport Home from './components/Home.js'\r\nimport Songs from './components/Songs.js'\r\nimport Artists from './components/Artists.js'\r\nimport Playlists from './components/Playlists.js'\r\nimport Albums from './components/Albums.js'\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport PostSong from './components/PostSong.js';\r\n\r\nfunction App() {\r\nconst [registerOpen, setRegisterOpen] = useState(false)\r\nconst [loginOpen,setLoginOpen] = useState(false)\r\nconst [user, setUser] = useState(undefined);\r\n\r\nuseEffect(() => {\r\nlet user = localStorage.getItem('email');\r\nconst autoLogin = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/auto/${user}`);\r\nsetUser(data[0])\r\n} catch {\r\nreturn\r\n}\r\n}; autoLogin();\r\n}, [])\r\n\r\nconst handleLogout = async () => {\r\nawait axios.put(`/logout`, {\r\nemail: user.email,\r\n});\r\nsetUser(undefined)\r\nlocalStorage.clear();\r\n    };\r\n\r\n \r\nfunction validateEmail(mail) {\r\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n  const handleRegister = async (email, name, password, repassword) => {\r\n    try{\r\n    if(validateEmail(email)) {\r\n          if (password === repassword){\r\n      const { data } = await axios.post(`/users`, {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      });\r\nsetUser(data[0])\r\nsetRegisterOpen(false)\r\n           } else {\r\ndocument.getElementById('errorMessage').innerHTML='Password fields do not match';\r\n           }\r\n          } else {\r\n document.getElementById('errorMessage').innerHTML='Please enter a valid email address';\r\n           }\r\n  } catch(response){\r\n  document.getElementById('errorMessage').innerHTML='The email you tried to register with is already in use';\r\n  }; \r\n  }\r\n\r\n    const handleLogin = async (email, password) => {\r\n    try{\r\n    if(validateEmail(email)) {\r\n      const { data } = await axios.put(`/users`, {\r\n      email: email,\r\n      password: password,\r\n      });\r\nlocalStorage.setItem('email', email);\r\nsetLoginOpen(false)   \r\nsetTimeout(() => {\r\nsetUser(data[0])\r\n}, 500);\r\n    } else {\r\n document.getElementById('errorMessage').innerHTML='Please enter a valid email address';\r\n    }\r\n  } catch (response){\r\n  document.getElementById('errorMessage').innerHTML='Either the email or password you entered is incorrect';\r\n  }; \r\n};\r\n\r\nfunction login(){\r\nlet email;\r\nlet password;\r\n\r\n      function insertEmail(event) {\r\n        email = event.target.value;\r\n      }\r\n\r\n      function insertPassword(event) {\r\n        password = event.target.value;\r\n      }\r\n\r\nreturn (\r\n  <span>\r\n<Button variant=\"text\" color=\"inherit\" onClick={() => setLoginOpen(true)}>\r\n        Login\r\n      </Button>\r\n      <Dialog open={loginOpen} onClose={() => setLoginOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            onChange={insertEmail}\r\n            defaultValue={email}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            required\r\n            fullWidth\r\n          />\r\n            <TextField\r\n            onChange={insertPassword}\r\n            autoFocus\r\n            defaultValue={password}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            required\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogTitle style={{color:'red'}} id=\"errorMessage\"></DialogTitle>\r\n        <DialogActions>\r\n          <Button type=\"submit\" onClick={() => setLoginOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleLogin(email, password)} color=\"primary\">\r\n            login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </span>\r\n)}\r\n\r\nfunction register(){\r\nlet email;\r\nlet name;\r\nlet password;\r\nlet repassword\r\n\r\n      function insertEmail(event) {\r\n        email = event.target.value;\r\n      }\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n\r\n      function insertPassword(event) {\r\n        password = event.target.value;\r\n      }\r\n\r\n      function insertRePassword(event) {\r\n        repassword = event.target.value;\r\n      }\r\n\r\nreturn (\r\n  <span>\r\n<Button variant=\"text\" color=\"inherit\" onClick={() => setRegisterOpen(true)}>\r\n        Register\r\n      </Button>\r\n      <Dialog open={registerOpen} onClose={() => setRegisterOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Register</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            onChange={insertEmail}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            onChange={insertName}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"name\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            onChange={insertPassword}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            onChange={insertRePassword}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"rePassword\"\r\n            label=\"Confirm password\"\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogTitle style={{color:'red'}} id=\"errorMessage\"></DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setRegisterOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleRegister(email, name, password, repassword)} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </span>\r\n)}\r\n\r\nconst logout =\r\n<Button style={{marginLeft:'85px'}} variant=\"text\" color=\"inherit\" onClick={handleLogout}>\r\nLogout\r\n</Button>\r\n\r\nconst platform = user ? <h5> {logout} </h5> :  <h5> {login()} | {register()} </h5>\r\n\r\n  return (\r\n<div className=\"App\">\r\n{platform}\r\n    <HashRouter>\r\n   <SideNav\r\n        className=\"sideNav\"\r\n      >\r\n        <SideNav.Toggle />\r\n        <SideNav.Nav defaultSelected=\"home\">\r\n          <NavItem eventKey=\"home\">\r\n            <NavIcon>\r\n              <i style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n              <NavLink to=\"/\"><i style={{color:'white', fontSize:'44px', paddingTop:\"3px\"}} className=\"fa fa-fw fa-home\" /></NavLink>\r\n          </NavItem>\r\n          <NavItem eventKey=\"1\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n               <NavLink className=\"navItem\" to=\"/Songs\">Songs</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n          <NavItem eventKey=\"2\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n           <NavLink className=\"navItem\" to=\"/Artists\">Artists</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n          <NavItem eventKey=\"3\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n               <NavLink className=\"navItem\" to=\"/Albums\">Albums</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n          <NavItem eventKey=\"4\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n             <NavLink className=\"navItem\" to=\"/Playlists\">Playlists</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n        </SideNav.Nav>\r\n      </SideNav>\r\n  <Route exact path=\"/\" component={() => <Home user={user}/>}/>\r\n<Route path=\"/Songs\" component={() => <Songs user={user}/>}/>\r\n<Route path=\"/Artists\" component={() => <Artists user={user}/>}/>\r\n<Route path=\"/Playlists\" component={() => <Playlists user={user}/>}/>\r\n<Route path=\"/Albums\" component={() => <Albums user={user}/>}/>\r\n<Route path=\"/PostSong\" component={() => <PostSong/>}/>\r\n      </HashRouter>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}