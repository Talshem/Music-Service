{"version":3,"sources":["components/Home.js","components/PostSong.js","components/Songs.js","components/Artists.js","components/Playlists.js","components/Albums.js","components/PostAlbum.js","components/PostArtist.js","components/PostPlaylist.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","useState","songs","setSongs","albums","setAlbums","artists","setArtists","playlists","setPlaylists","useEffect","a","axios","get","data","slice","makeLists","fetchData","playCount","e","put","song_id","youtube_id","count","play_count","sArray","map","key","title","className","onPlay","videoId","id","opts","width","height","alArray","name","alt","src","cover_img","arArray","pArray","user","PostSong","selectedAlbum","setSelectedAlbum","selectedArtist","setSelectedArtist","validateLength","length","test","addSong","artist","album","track_number","lyrics","created_at","document","getElementById","innerHTML","newCreated_at","newLyrics","replace","newTitle","newArtist","newAlbum","post","reset","selectArtist","value","label","selectAlbum","onSubmit","required","type","defaultValue","onChange","event","target","maxMenuHeight","options","rows","class","form","to","style","marginTop","marginLeft","fontSize","color","Songs","list","setList","search","setSearch","preferences","setPreferences","admin","setAdmin","toggleDelete","setToggleDelete","favorites","setFavorites","togglePref","setTogglePref","email","getPreferences","isAdmin","is_admin","x","JSON","parse","filter","toUpperCase","includes","favoriteList","makeSongs","deleteSong","newId","delete","isLiked","toggle","is_liked","array","heart","like","adminDelete","onClick","cursor","filterFavorites","placeholder","path","component","Artists","makeArtists","deleteArtist","newName","Playlists","makePlaylists","deletePlaylist","Albums","makeAlbums","deleteAlbum","PostAlbum","addAlbum","image","left","PostArtist","addArtist","PostPlaylist","addPlaylist","newSongs","App","registerOpen","setRegisterOpen","loginOpen","setLoginOpen","undefined","setUser","localStorage","getItem","setTimeout","autoLogin","handleLogout","clear","validateEmail","mail","handleRegister","password","repassword","handleLogin","setItem","logout","Button","variant","platform","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","fullWidth","DialogActions","login","register","expanded","onToggle","Toggle","Nav","defaultSelected","eventKey","paddingTop","exact","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a3eae64c.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\n\r\nfunction Home(props) {\r\nconst [songs, setSongs] = useState([]);\r\nconst [albums, setAlbums] = useState([]);\r\nconst [artists, setArtists] = useState([]);\r\nconst [playlists, setPlaylists] = useState([]);\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      const songs = await (await axios.get(`/top_songs`)).data.slice(0, 20);\r\n      const albums = await (await axios.get(`/top_albums`)).data.slice(0, 20);\r\n      const artists = await (await axios.get(`/top_artists`)).data.slice(0, 20);\r\n      const playlists = await (await axios.get(`/top_playlists`)).data.slice(0, 20);\r\n      makeLists(songs, albums, artists, playlists)\r\n    }; fetchData();\r\n   }, [])\r\n\r\nconst playCount = async (e) => {\r\nawait axios.put(`/count`, {\r\nsong_id: e.youtube_id,\r\ncount: e.play_count + 1,\r\n});\r\n};\r\n\r\n\r\nconst makeLists = (songs, albums, artists, playlists) => {\r\nlet sArray = songs.map(e => {\r\nreturn (\r\n<li key={e.youtube_id}>\r\n<p>{e.title}</p>\r\n<YouTube className=\"video\" onPlay={() => playCount(e)}videoId={e.youtube_id} id=\"video\" opts={{width:\"150\",height:\"150\"}}/>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\n\r\nlet alArray = albums.map(e => {\r\nreturn (\r\n<li key={e.name}>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\nlet arArray = artists.map(e => {\r\nreturn (\r\n<li key={e.name}>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\nlet pArray = playlists.map(e => {\r\nreturn (\r\n<li key={e.name}>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\nsetSongs(sArray)\r\nsetAlbums(alArray)\r\nsetArtists(arArray)\r\nsetPlaylists(pArray)\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n<h3>Hello, {props.user ? props.user.name : 'Guest'}</h3>\r\n<div className=\"lists\"> \r\n<div >\r\n<h4> Top Songs </h4> \r\n<ul className=\"songs\" >{songs}</ul>\r\n</div>\r\n\r\n\r\n<div>  \r\n<h4> Top Albums </h4>  \r\n<ul className=\"albums\">{albums}</ul>\r\n</div>\r\n\r\n\r\n<div >\r\n<h4>Top Artists</h4>\r\n<ul className=\"artists\">{artists}</ul>\r\n</div>\r\n\r\n<div>\r\n<h4>Top Playlists</h4>\r\n<ul className=\"playlists\">{playlists}</ul>\r\n</div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport Select from 'react-select';\r\n\r\nfunction PostSong(props) {\r\nconst [albums, setAlbums] = useState([]);\r\nconst [artists, setArtists] = useState([]);\r\n\r\nconst [selectedAlbum, setSelectedAlbum] = useState(null);\r\nconst [selectedArtist, setSelectedArtist] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setAlbums(await (await axios.get(`/top_albums`)).data);\r\n      setArtists(await (await axios.get(`/top_artists`)).data);\r\n    }; fetchData();\r\n   }, []);\r\n  \r\nfunction validateDate(date) {\r\n if (/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(date))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\nfunction validateTrack(track) {\r\n   if (/^[1-9]\\d{0,1}(?:,\\d{1,3})?$/.test(track))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\nfunction validateLength(length) {\r\nif (/^([0-5]?[0-9]|2[0-3]):[0-5][0-9]$/.test(length)) {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n  const addSong = async (title, length, youtube_id, artist, album, track_number, lyrics, created_at) => {\r\n    if(selectedArtist === null) {\r\n    return document.getElementById('songError').innerHTML = \"Select an artist\";\r\n    }\r\n    if(selectedAlbum === null) {\r\n    return document.getElementById('songError').innerHTML = \"Select an album\";\r\n    }\r\n  const newCreated_at = created_at.slice(0,10)\r\n  const newLyrics = lyrics.replace(`'`,`''`);\r\n  const newTitle = title.replace(`'`,`''`);\r\n  const newArtist = artist.replace(`'`,`''`);\r\n  const newAlbum = album.replace(`'`,`''`);\r\n    if (!props.user) {\r\n    return document.getElementById('songError').innerHTML = 'Only registered users can post new songs to the website!';\r\n    }\r\n    if (!validateLength(length)) {\r\n    return document.getElementById('songError').innerHTML = 'Length form is invalid';\r\n    }\r\n    if (!validateDate(newCreated_at)) {\r\n    return document.getElementById('songError').innerHTML = \"Release date form is invalid\";\r\n    }\r\n    if(!validateTrack(track_number)) {\r\n    return document.getElementById('songError').innerHTML = \"Track number field must be a number\";\r\n    }\r\n    try{\r\n    await axios.post(`/song`, {\r\n    title: newTitle, \r\n    length: length, \r\n    youtube_id: youtube_id, \r\n    artist: newArtist, \r\n    album: newAlbum, \r\n    track_number: track_number, \r\n    lyrics: newLyrics, \r\n    created_at: newCreated_at,\r\n    })\r\n  document.getElementById(\"songForm\").reset();\r\n} catch (response){\r\n   document.getElementById('songError').innerHTML = \"Song already exists\";\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet title;\r\nlet youtube_id;\r\nlet length;\r\nlet track_number;\r\nlet lyrics;\r\nlet created_at\r\n\r\n      function insertTitle(event) {\r\n        title = event.target.value;\r\n      }\r\n      function insertLength(event) {\r\n        length = event.target.value;\r\n      }\r\n      function insertYoutube(event) {\r\n        youtube_id = event.target.value;\r\n      }\r\n      function insertTrack(event) {\r\n        track_number = event.target.value;\r\n      }\r\n\r\n      function insertLyrics(event) {\r\n        lyrics = event.target.value;\r\n      }\r\n      function insertRelease(event) {\r\n        created_at = event.target.value;\r\n      }\r\n\r\nlet selectArtist = artists.map(e => ({ value: e.name, label: e.name }))\r\nlet selectAlbum = albums.map(e => ({value: e.name, label: e.name }))\r\n\r\nreturn (\r\n <form id=\"songForm\" className=\"songForm\" onSubmit={() => addSong(title, length, youtube_id, selectedArtist, selectedAlbum, track_number, lyrics, created_at)}>\r\n   <div>\r\n    <label> Name of the song: </label><br/>\r\n    <input required type=\"text\" defaultValue={title} onChange={insertTitle}/> <br/><br/>\r\n<label>Youtube ID: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">youtube.com/watch?v= (Youtube_ID)</span></i><br/>\r\n    <input required type=\"text\" defaultValue={youtube_id} onChange={insertYoutube}/><br/><br/>\r\n    <label> Length: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">M M : S S</span></i><br/>\r\n    <input required type=\"text\" defaultValue={length} onChange={insertLength}/> <br/><br/>\r\n    <label>Artist: </label><br/>\r\n    <Select required maxMenuHeight={160}\r\n    defaultValue={selectedArtist}\r\n    onChange={setSelectedArtist}\r\n    options={selectArtist}>\r\n    </Select><br/>\r\n    <label> Album: </label><br/>\r\n    <Select required maxMenuHeight={160}\r\n    defaultValue={selectedAlbum}\r\n    onChange={setSelectedAlbum}\r\n    options={selectAlbum}>\r\n    </Select><br/>\r\n    <label> Track number: </label><br/>\r\n    <input required type=\"text\" defaultValue={track_number} onChange={insertTrack}/><br/><br/>\r\n     </div>\r\n     <div>\r\n    <label> Lyrics: </label><br/>\r\n    <textarea rows=\"12\" required type=\"text\" defaultValue={lyrics} onChange={insertLyrics}/> <br/><br/>\r\n    <label> Release date: </label><i class='tooltip fas fa-info'> <span class=\"tooltiptext\">Y Y Y Y - M M - D D</span></i><br/>\r\n    <input required type=\"text\" defaultValue={created_at} onChange={insertRelease}/><br/><br/>\r\n    <input type='submit' className=\"post\" value=\"Post Song\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<HashRouter>\r\n<NavLink className=\"fa fa-arrow-left back\" to=\"/Songs\"></NavLink>\r\n</HashRouter>\r\n<p id=\"songError\" style={{marginTop:\"10px\", marginLeft:\"20px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostSong;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport PostSong from './PostSong.js';\r\n\r\nfunction Songs(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\nconst [preferences, setPreferences] = useState(\"[]\")\r\nconst [admin, setAdmin] = useState(0)\r\nconst [toggleDelete, setToggleDelete] = useState(false)\r\nconst [favorites, setFavorites] = useState(false)\r\nconst [togglePref, setTogglePref] = useState(false)\r\n\r\nuseEffect(() => {\r\nconst getPreferences = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/preferences/${props.user.email}`)\r\nsetPreferences(data[0].preferences)\r\n} catch {\r\nreturn\r\n}\r\n}; getPreferences();\r\n}, [togglePref])\r\n\r\nuseEffect(() => {\r\nif(props.user){\r\nlet isAdmin = props.user.is_admin;\r\nsetAdmin(isAdmin)\r\n}}, [props.user])\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      let x = JSON.parse(preferences)\r\n      const songs = await (await axios.get(`/top_songs`)).data;\r\n      let list = songs.filter(e => e.title.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makeSongs(list) \r\n      } else {\r\n      let favoriteList = list.filter(e => x.includes(`song: ${e.youtube_id}`))\r\n      makeSongs(favoriteList)\r\n      }\r\n    }; fetchData();\r\n   }, [favorites, search, toggleDelete, preferences])\r\n\r\nconst deleteSong = async (e) => {\r\nconst newId = e.youtube_id.replace(`'`,`''`);\r\nawait axios.delete(`/song/${newId}`);\r\nsetToggleDelete(!toggleDelete)\r\n};\r\n\r\nconst playCount = async (e) => {\r\nawait axios.put(`/count`, {\r\nsong_id: e.youtube_id,\r\ncount: e.play_count + 1,\r\n});\r\n};\r\n\r\n\r\nconst isLiked = async (e) => {\r\nlet x = JSON.parse(preferences)\r\nif (x.includes(`song: ${e.youtube_id}`)){\r\nawait axios.put(`/song/like`, {\r\ntoggle: 'unlike',\r\nis_liked: e.is_liked - 1,\r\npreferences: x,\r\nuser: props.user.email,\r\nyoutube_id: e.youtube_id,\r\n});\r\nsetTogglePref(!togglePref)\r\n} else {\r\nawait axios.put(`/song/like`, {\r\ntoggle: 'like',\r\nis_liked: e.is_liked + 1,\r\nuser: props.user.email,\r\nyoutube_id: e.youtube_id,\r\n});\r\nsetTogglePref(!togglePref)\r\n}\r\n}\r\n\r\nconst makeSongs = (songs) => {\r\n\r\nlet x = JSON.parse(preferences);\r\n\r\nlet array = songs.map(e => {\r\nconst heart = x.includes(`song: ${e.youtube_id}`) ? <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\nconst like = props.user ? heart :  '';\r\n\r\nconst deleteButton = <button style={{marginTop:\"20px\"}} onClick={() => deleteSong(e)} className=\"deleteButton\">Delete</button>;\r\nconst adminDelete = admin === 1 ? deleteButton : '';\r\n\r\nreturn (\r\n<li key={e.youtube_id} className=\"grid-item\">\r\n<p><span style={{cursor:'pointer'}} onClick={() => isLiked(e)}>{like}</span> {e.title}</p>\r\n<YouTube className=\"video\" onPlay={() => playCount(e)} videoId={e.youtube_id} id=\"video\" opts={{width:\"150\",height:\"150\"}}/>\r\n{adminDelete}\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\n  return (\r\n<div> \r\n<p className='listTitle'>Songs</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} /> \r\n<HashRouter>\r\n{props.user ? <NavLink className=\"fa fa-plus-square-o add\" to=\"/PostSong\"></NavLink> : ''}\r\n<Route path=\"/PostSong\" component={() => <PostSong/>}/>\r\n</HashRouter>\r\n<i className=\"filterFavorites\" onClick={() => setFavorites(!favorites)}>{filterFavorites}</i>\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Songs;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction Artists(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\nconst [preferences, setPreferences] = useState(\"[]\")\r\nconst [admin, setAdmin] = useState(0)\r\nconst [toggleDelete, setToggleDelete] = useState(false)\r\nconst [favorites, setFavorites] = useState(false)\r\nconst [togglePref, setTogglePref] = useState(false)\r\n\r\nuseEffect(() => {\r\nconst getPreferences = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/preferences/${props.user.email}`)\r\nsetPreferences(data[0].preferences)\r\n} catch {\r\nreturn\r\n}\r\n}; getPreferences();\r\n}, [togglePref])\r\n\r\nuseEffect(() => {\r\nif(props.user){\r\nlet isAdmin = props.user.is_admin;\r\nsetAdmin(isAdmin)\r\n}}, [props.user])\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      let x = JSON.parse(preferences)\r\n      const artists = await (await axios.get(`/top_artists`)).data;\r\n      let list = artists.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makeArtists(list) \r\n      } else {\r\n      let favoriteList = list.filter(e => x.includes(`artist: ${e.name}`))\r\n      makeArtists(favoriteList)\r\n      }\r\n    }; fetchData();\r\n   }, [favorites, search, toggleDelete, preferences])\r\n\r\nconst deleteArtist = async (e) => {\r\nconst newName = e.name.replace(`'`,`''`);\r\nawait axios.delete(`/artist/${newName}`);\r\nsetToggleDelete(!toggleDelete)\r\n};\r\n\r\nconst isLiked = async (e) => {\r\nlet x = JSON.parse(preferences)\r\nif (x.includes(`artist: ${e.name}`)){\r\nawait axios.put(`/artist/like`, {\r\ntoggle: 'unlike',\r\nis_liked: e.is_liked - 1,\r\npreferences: x,\r\nuser: props.user.email,\r\nname: e.name,\r\n});\r\nsetTogglePref(!togglePref)\r\n} else {\r\nawait axios.put(`/artist/like`, {\r\ntoggle: 'like',\r\nis_liked: e.is_liked + 1,\r\nuser: props.user.email,\r\nname: e.name,\r\n});\r\nsetTogglePref(!togglePref)\r\n}\r\n}\r\n\r\n\r\nconst makeArtists = (artists) => {\r\n\r\nlet x = JSON.parse(preferences);\r\n\r\nlet array = artists.map(e => {\r\nconst heart = x.includes(`artist: ${e.name}`) ? <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\nconst like = props.user ? heart :  '';\r\n\r\nconst deleteButton = <button onClick={() => deleteArtist(e)} className=\"deleteButton\">Delete</button>;\r\nconst adminDelete = admin === 1 ? deleteButton : '';\r\n\r\nreturn (\r\n<li key={e.name} className=\"grid-item\">\r\n<p><span style={{cursor:'pointer'}} onClick={() => isLiked(e)}>{like} </span>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}></img>\r\n{adminDelete}\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\n  return (\r\n<div> \r\n<p className='listTitle'>Artists</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} /> \r\n<HashRouter>\r\n{props.user ? <NavLink className=\"fa fa-plus-square-o add\" to=\"/PostArtist\"></NavLink> : ''}\r\n</HashRouter>\r\n<i className=\"filterFavorites\" onClick={() => setFavorites(!favorites)}>{filterFavorites}</i>\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Artists;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n  \r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction Playlists(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\nconst [preferences, setPreferences] = useState(\"[]\")\r\nconst [admin, setAdmin] = useState(0)\r\nconst [toggleDelete, setToggleDelete] = useState(false)\r\nconst [favorites, setFavorites] = useState(false)\r\nconst [togglePref, setTogglePref] = useState(false)\r\n\r\n\r\nuseEffect(() => {\r\nconst getPreferences = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/preferences/${props.user.email}`)\r\nsetPreferences(data[0].preferences)\r\n} catch {\r\nreturn\r\n}\r\n}; getPreferences();\r\n}, [togglePref])\r\n\r\nuseEffect(() => {\r\nif(props.user){\r\nlet isAdmin = props.user.is_admin;\r\nsetAdmin(isAdmin)\r\n}}, [props.user])\r\n\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      let x = JSON.parse(preferences)\r\n      const playlists = await (await axios.get(`/top_playlists`)).data;\r\n      let list = playlists.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makePlaylists(list) \r\n      } else {\r\n      let favoriteList = list.filter(e => x.includes(`playlist: ${e.id}`))\r\n      makePlaylists(favoriteList)\r\n      }\r\n    }; fetchData();\r\n   }, [favorites, search, toggleDelete, preferences])\r\n\r\nconst deletePlaylist = async (e) => {\r\nconst newName = e.name.replace(`'`,`''`);\r\nawait axios.delete(`/playlist/${newName}`);\r\nsetToggleDelete(!toggleDelete)\r\n};\r\n\r\nconst isLiked = async (e) => {\r\nlet x = JSON.parse(preferences)\r\nif (preferences.includes(`playlist: ${e.id}`)){\r\nawait axios.put(`/playlist/like`, {\r\ntoggle: 'unlike',\r\nis_liked: e.is_liked - 1,\r\npreferences: x,\r\nuser: props.user.email,\r\nid: e.id,\r\n});\r\nsetTogglePref(!togglePref)\r\n} else {\r\nawait axios.put(`/playlist/like`, {\r\ntoggle: 'like',\r\nis_liked: e.is_liked + 1,\r\nuser: props.user.email,\r\nid: e.id,\r\n});\r\nsetTogglePref(!togglePref)\r\n}\r\n}\r\n\r\n\r\nconst makePlaylists = (playlists) => {\r\n\r\nlet x = JSON.parse(preferences)\r\n\r\nlet array = playlists.map(e => {\r\nconst heart = x.includes(`playlist: ${e.id}`) ? <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\nconst like = props.user ? heart :  '';\r\n\r\nconst deleteButton = <button onClick={() => deletePlaylist(e)} className=\"deleteButton\">Delete</button>;\r\nconst adminDelete = admin === 1 ? deleteButton : '';\r\n\r\nreturn (\r\n<li key={e.name} className=\"grid-item\">\r\n<p><span style={{cursor:'pointer'}} onClick={() => isLiked(e)}>{like} </span>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}></img>\r\n{adminDelete}\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\n  return (\r\n<div> \r\n<p className='listTitle'>Playlists</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} /> \r\n<HashRouter>\r\n{props.user ? <NavLink className=\"fa fa-plus-square-o add\" to=\"/PostPlaylist\"></NavLink> : ''}\r\n</HashRouter>\r\n<i className=\"filterFavorites\" onClick={() => setFavorites(!favorites)}>{filterFavorites}</i>\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\n\r\nexport default Playlists;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n  } from \"react-router-dom\";\r\n\r\nfunction Albums(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\nconst [preferences, setPreferences] = useState(\"[]\")\r\nconst [admin, setAdmin] = useState(0)\r\nconst [toggleDelete, setToggleDelete] = useState(false)\r\nconst [favorites, setFavorites] = useState(false)\r\nconst [togglePref, setTogglePref] = useState(false)\r\n\r\nuseEffect(() => {\r\nconst getPreferences = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/preferences/${props.user.email}`)\r\nsetPreferences(data[0].preferences)\r\n} catch {\r\nreturn\r\n}\r\n}; getPreferences();\r\n}, [togglePref])\r\n\r\nuseEffect(() => {\r\nif(props.user){\r\nlet isAdmin = props.user.is_admin;\r\nsetAdmin(isAdmin)\r\n}}, [props.user])\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      let x = JSON.parse(preferences)\r\n      const albums = await (await axios.get(`/top_albums`)).data;\r\n      let list = albums.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makeAlbums(list) \r\n      } else {\r\n      let favoriteList = list.filter(e => x.includes(`album: ${e.name}`))\r\n      makeAlbums(favoriteList)\r\n      }\r\n    }; fetchData();\r\n   }, [favorites, search, toggleDelete, preferences])\r\n\r\nconst deleteAlbum = async (e) => {\r\nconst newName = e.name.replace(`'`,`''`);\r\nawait axios.delete(`/album/${newName}`);\r\nsetToggleDelete(!toggleDelete)\r\n};\r\n\r\nconst isLiked = async (e) => {\r\nlet x = JSON.parse(preferences)\r\nif (x.includes(`album: ${e.name}`)){\r\nawait axios.put(`/album/like`, {\r\ntoggle: 'unlike',\r\nis_liked: e.is_liked - 1,\r\npreferences: x,\r\nuser: props.user.email,\r\nname: e.name,\r\n});\r\nsetTogglePref(!togglePref)\r\n} else {\r\nawait axios.put(`/album/like`, {\r\ntoggle: 'like',\r\nis_liked: e.is_liked + 1,\r\nuser: props.user.email,\r\nname: e.name,\r\n});\r\nsetTogglePref(!togglePref)\r\n}\r\n}\r\n\r\n\r\nconst makeAlbums = (albums) => {\r\n\r\nlet x = JSON.parse(preferences);\r\n\r\nlet array = albums.map(e => {\r\nconst heart = x.includes(`album: ${e.name}`) ? <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\nconst like = props.user ? heart :  '';\r\n\r\nconst deleteButton = <button onClick={() => deleteAlbum(e)} className=\"deleteButton\">Delete</button>;\r\nconst adminDelete = admin === 1 ? deleteButton : '';\r\n\r\nreturn (\r\n<li key={e.name} className=\"grid-item\">\r\n<p><span style={{cursor:'pointer'}} onClick={() => isLiked(e)}>{like} </span>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}></img>\r\n{adminDelete}\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\n\r\n\r\n  return (\r\n<div> \r\n<p className='listTitle'>Albums</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} /> \r\n<HashRouter>\r\n{props.user ? <NavLink className=\"fa fa-plus-square-o add\" to=\"/PostAlbum\"></NavLink> : ''}\r\n</HashRouter>\r\n<i className=\"filterFavorites\" onClick={() => setFavorites(!favorites)}>{filterFavorites}</i>\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Albums;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport Select from 'react-select';\r\n\r\nfunction PostAlbum(props) {\r\nconst [artists, setArtists] = useState([]);\r\nconst [selectedArtist, setSelectedArtist] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setArtists(await (await axios.get(`/top_artists`)).data);\r\n    }; fetchData();\r\n   }, []);\r\n  \r\nfunction validateDate(date) {\r\n if (/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(date))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n  const addAlbum = async (name, image, artist, created_at) => {\r\n  const newCreated_at = created_at.slice(0,10)\r\n    if (!validateDate(newCreated_at)) {\r\n    return document.getElementById('albumError').innerHTML = \"Release date form is invalid\";\r\n    }\r\n    if (!props.user) {\r\n    return document.getElementById('albumError').innerHTML = 'Only registered users can post new albums to the website!';\r\n    }\r\n  const newName = name.replace(`'`,`''`);\r\n  const newArtist = artist.replace(`'`,`''`);\r\n    try{\r\n    await axios.post(`/album`, {\r\n    name: newName, \r\n    artist: newArtist, \r\n    cover_img: image,\r\n    created_at: newCreated_at,\r\n    })\r\n  document.getElementById(\"albumForm\").reset();\r\n} catch (response){\r\n   document.getElementById('albumError').innerHTML = \"Album already exists\";\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet name;\r\nlet image;\r\nlet created_at\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n      function insertImage(event) {\r\n        image = event.target.value;\r\n      }\r\n\r\n      function insertRelease(event) {\r\n        created_at = event.target.value;\r\n      }\r\n\r\nlet selectArtist = artists.map(e => ({ value: e.name, label: e.name }))\r\n\r\nreturn (\r\n <form id=\"albumForm\" className=\"albumForm\" onSubmit={() => addAlbum(name, image, selectedArtist, created_at)}>\r\n   <div>\r\n    <label> Name of the Album: </label><br/>\r\n    <input required type=\"text\" id=\"title\" defaultValue={name} onChange={insertName}/> <br/><br/>\r\n    <label>Artist: </label><br/>\r\n    <Select style={{}} required maxMenuHeight={160}\r\n    defaultValue={selectedArtist}\r\n    onChange={setSelectedArtist}\r\n    options={selectArtist}>\r\n    </Select><br/>\r\n    <label> Cover image URL </label><br/>\r\n    <input required type=\"text\" defaultValue={image} onChange={insertImage}/><br/><br/>\r\n    <label> Release date: </label><i class='tooltip fas fa-info'> <span class=\"tooltiptext\">Y Y Y Y - M M - D D</span></i><br/>\r\n    <input required type=\"text\" defaultValue={created_at} onChange={insertRelease}/><br/><br/>\r\n    <input type='submit' style={{left:'410px'}} className=\"post\" value=\"Post Album\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<HashRouter>\r\n<NavLink className=\"fa fa-arrow-left back\" style={{left:\"84px\"}} to=\"/Albums\"></NavLink>\r\n</HashRouter>\r\n<p id=\"albumError\" style={{marginTop:\"0px\", marginLeft:\"130px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostAlbum;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction PostArtist(props) {\r\n\r\n  const addArtist = async (name, image) => {\r\n  const newName = name.replace(`'`,`''`);\r\n    try{\r\n    await axios.post(`/artist`, {\r\n    name: newName, \r\n    cover_img: image,\r\n    })\r\n  document.getElementById(\"artistForm\").reset();\r\n} catch (response){\r\n   document.getElementById('artistError').innerHTML = \"Artist already exists\";\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet name;\r\nlet image;\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n      function insertImage(event) {\r\n        image = event.target.value;\r\n      }\r\n\r\nreturn (\r\n <form id=\"artistForm\" className=\"artistForm\" onSubmit={() => addArtist(name, image)}>\r\n   <div>\r\n    <label> Name of the Artist: </label><br/>\r\n    <input required type=\"text\" defaultValue={name} onChange={insertName}/> <br/><br/>\r\n    <label> Artist image URL </label><br/>\r\n    <input required type=\"text\" defaultValue={image} onChange={insertImage}/><br/><br/>\r\n    <input type='submit' style={{left:'418px'}} className=\"post\" value=\"Post Artist\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<HashRouter>\r\n<NavLink className=\"fa fa-arrow-left back\" style={{left:\"83px\"}} to=\"/Artists\"></NavLink>\r\n</HashRouter>\r\n<p id=\"artistError\" style={{marginTop:\"-2px\", marginLeft:\"120px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostArtist;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction PostPlaylist(props) {\r\n  \r\nfunction validateDate(date) {\r\n if (/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(date))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n  const addPlaylist = async (name, songs, image, created_at) => {\r\n    const newCreated_at = created_at.slice(0,10)\r\n    if (!validateDate(newCreated_at)) {\r\n    return document.getElementById('playlistError').innerHTML = \"Release date form is invalid\";\r\n    }\r\n    if (!props.user) {\r\n    return document.getElementById('playlistError').innerHTML = 'Only registered users can post new playlists to the website!';\r\n    }\r\n  const newName = name.replace(`'`,`''`);\r\n  const newSongs = songs.replace(`'`,`''`);\r\n    try{\r\n    await axios.post(`/playlist`, {\r\n    name: newName, \r\n    songs: [newSongs], \r\n    cover_img: image,\r\n    created_at: newCreated_at,\r\n    })\r\n  document.getElementById(\"playlistForm\").reset();\r\n} catch (response){\r\n   document.getElementById('playlistError').innerHTML = \"Undetected error\";\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet name;\r\nlet songs;\r\nlet image;\r\nlet created_at\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n      function insertSongs(event) {\r\n      songs = event.target.value;\r\n      }\r\n      function insertImage(event) {\r\n        image = event.target.value;\r\n      }\r\n\r\n      function insertRelease(event) {\r\n        created_at = event.target.value;\r\n      }\r\n\r\n\r\nreturn (\r\n <form id=\"playlistForm\" className=\"playlistForm\" onSubmit={() => addPlaylist(name, songs, image, created_at)}>\r\n   <div>\r\n    <label> Name of the Playlist: </label><br/>\r\n    <input required type=\"text\" defaultValue={name} onChange={insertName}/> <br/><br/>\r\n    <label> Songs: </label><i class='tooltip fas fa-info'> <span className=\"tooltiptext\">Add a comma after every song</span></i><br/>\r\n    <textarea rows=\"5\" required type=\"text\" defaultValue={songs} onChange={insertSongs}/> <br/><br/>\r\n    <label> Cover image URL </label><br/>\r\n    <input required type=\"text\" defaultValue={image} onChange={insertImage}/><br/><br/>\r\n    <label> Release date: </label><i class='tooltip fas fa-info'> <span className=\"tooltiptext\">Y Y Y Y - M M - D D</span></i><br/>\r\n    <input required type=\"text\" defaultValue={created_at} onChange={insertRelease}/><br/><br/>\r\n    <input type='submit' style={{left:'400px'}} className=\"post\" value=\"Post Playlist\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<HashRouter>\r\n<NavLink className=\"fa fa-arrow-left back\" style={{left:\"83px\"}} to=\"/Playlists\"></NavLink>\r\n</HashRouter>\r\n<p id=\"playlistError\" style={{marginTop:\"-2px\", marginLeft:\"120px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostPlaylist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport SideNav, {\r\n NavItem, NavIcon, NavText,\r\n} from '@trendmicro/react-sidenav';\r\nimport Home from './components/Home.js'\r\nimport Songs from './components/Songs.js'\r\nimport Artists from './components/Artists.js'\r\nimport Playlists from './components/Playlists.js'\r\nimport Albums from './components/Albums.js'\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport PostSong from './components/PostSong.js';\r\nimport PostAlbum from './components/PostAlbum.js';\r\nimport PostArtist from './components/PostArtist.js';\r\nimport PostPlaylist from './components/PostPlaylist.js';\r\n\r\nfunction App() {\r\nconst [registerOpen, setRegisterOpen] = useState(false)\r\nconst [loginOpen,setLoginOpen] = useState(false)\r\nconst [user, setUser] = useState(undefined);\r\n\r\nuseEffect(() => {\r\nlet user = localStorage.getItem('email');\r\nconst autoLogin = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/auto/${user}`);\r\nsetTimeout(() => {\r\nsetUser(data[0])\r\n}, 500);\r\n} catch {\r\nreturn\r\n}\r\n}; autoLogin();\r\n}, [])\r\n\r\nconst handleLogout = async () => {\r\nawait axios.put(`/logout`, {\r\nemail: user.email,\r\n});\r\nsetUser(undefined)\r\nlocalStorage.clear();\r\n    };\r\n\r\n \r\nfunction validateEmail(mail) {\r\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n  const handleRegister = async (email, name, password, repassword) => {\r\n    try{\r\n    if(validateEmail(email)) {\r\n          if (password === repassword){\r\n      const { data } = await axios.post(`/users`, {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      });\r\nsetUser(data[0])\r\nsetRegisterOpen(false)\r\n           } else {\r\ndocument.getElementById('errorMessage').innerHTML='Password fields do not match';\r\n           }\r\n          } else {\r\n document.getElementById('errorMessage').innerHTML='Please enter a valid email address';\r\n           }\r\n  } catch(response){\r\n  document.getElementById('errorMessage').innerHTML='The email you tried to register with is already in use';\r\n  }; \r\n  }\r\n\r\n    const handleLogin = async (email, password) => {\r\n    try{\r\n    if(validateEmail(email)) {\r\n      const { data } = await axios.put(`/users`, {\r\n      email: email,\r\n      password: password,\r\n      });\r\nlocalStorage.setItem('email', email);\r\nsetLoginOpen(false)   \r\nsetTimeout(() => {\r\nsetUser(data[0])\r\n}, 500);\r\n    } else {\r\n document.getElementById('errorMessage').innerHTML='Please enter a valid email address';\r\n    }\r\n  } catch (response){\r\n  document.getElementById('errorMessage').innerHTML='Either the email or password you entered is incorrect';\r\n  }; \r\n};\r\n\r\nfunction login(){\r\nlet email;\r\nlet password;\r\n\r\n      function insertEmail(event) {\r\n        email = event.target.value;\r\n      }\r\n\r\n      function insertPassword(event) {\r\n        password = event.target.value;\r\n      }\r\n\r\nreturn (\r\n  <span>\r\n<Button variant=\"text\" color=\"inherit\" onClick={() => setLoginOpen(true)}>\r\n        Login\r\n      </Button>\r\n      <Dialog open={loginOpen} onClose={() => setLoginOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            onChange={insertEmail}\r\n            defaultValue={email}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            required\r\n            fullWidth\r\n          />\r\n            <TextField\r\n            onChange={insertPassword}\r\n            autoFocus\r\n            defaultValue={password}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            required\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogTitle style={{color:'red'}} id=\"errorMessage\"></DialogTitle>\r\n        <DialogActions>\r\n          <Button type=\"submit\" onClick={() => setLoginOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleLogin(email, password)} color=\"primary\">\r\n            login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </span>\r\n)}\r\n\r\nfunction register(){\r\nlet email;\r\nlet name;\r\nlet password;\r\nlet repassword\r\n\r\n      function insertEmail(event) {\r\n        email = event.target.value;\r\n      }\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n\r\n      function insertPassword(event) {\r\n        password = event.target.value;\r\n      }\r\n\r\n      function insertRePassword(event) {\r\n        repassword = event.target.value;\r\n      }\r\n\r\nreturn (\r\n  <span>\r\n<Button variant=\"text\" color=\"inherit\" onClick={() => setRegisterOpen(true)}>\r\n        Register\r\n      </Button>\r\n      <Dialog open={registerOpen} onClose={() => setRegisterOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Register</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            onChange={insertEmail}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            onChange={insertName}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"name\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            onChange={insertPassword}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            onChange={insertRePassword}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"rePassword\"\r\n            label=\"Confirm password\"\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogTitle style={{color:'red'}} id=\"errorMessage\"></DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setRegisterOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleRegister(email, name, password, repassword)} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </span>\r\n)}\r\n\r\nconst logout =\r\n<Button style={{marginLeft:'85px'}} variant=\"text\" color=\"inherit\" onClick={handleLogout}>\r\nLogout\r\n</Button>\r\n\r\nconst platform = user ? <h5> {logout} </h5> :  <h5> {login()} | {register()} </h5>\r\n\r\n  return (\r\n<div className=\"App\">\r\n{platform}\r\n    <HashRouter>\r\n   <SideNav\r\n        className=\"sideNav\"\r\n        expanded={true}\r\n        onToggle={() => {return}}\r\n      >\r\n        <SideNav.Toggle/>\r\n        <SideNav.Nav defaultSelected=\"home\">\r\n          <NavItem eventKey=\"home\">\r\n            <NavIcon>\r\n              <i style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n              <NavLink to=\"/\"><i style={{color:'white', fontSize:'44px', paddingTop:\"3px\"}} className=\"fa fa-fw fa-home\" /></NavLink>\r\n          </NavItem>\r\n          <NavItem eventKey=\"1\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n               <NavLink className=\"navItem\" to=\"/Songs\">Songs</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n             <NavItem eventKey=\"2\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n               <NavLink className=\"navItem\" to=\"/Albums\">Albums</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n          <NavItem eventKey=\"3\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n           <NavLink className=\"navItem\" to=\"/Artists\">Artists</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n          <NavItem eventKey=\"4\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n             <NavLink className=\"navItem\" to=\"/Playlists\">Playlists</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n        </SideNav.Nav>\r\n      </SideNav>\r\n  <Route exact path=\"/\" component={() => <Home user={user}/>}/>\r\n<Route path=\"/Songs\" component={() => <Songs user={user}/>}/>\r\n<Route path=\"/Artists\" component={() => <Artists user={user}/>}/>\r\n<Route path=\"/Playlists\" component={() => <Playlists user={user}/>}/>\r\n<Route path=\"/Albums\" component={() => <Albums user={user}/>}/>\r\n<Route path=\"/PostSong\" component={() => <PostSong user={user}/>}/>\r\n<Route path=\"/PostAlbum\" component={() => <PostAlbum user={user}/>}/>\r\n<Route path=\"/PostArtist\" component={() => <PostArtist user={user}/>}/>\r\n<Route path=\"/PostPlaylist\" component={() => <PostPlaylist user={user}/>}/>\r\n      </HashRouter>\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}