{"version":3,"sources":["components/Home.js","components/Songs.js","components/Artists.js","components/Playlists.js","components/Albums.js","components/PostSong.js","components/PostAlbum.js","components/PostArtist.js","components/PostPlaylist.js","components/SongData.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","useState","songs","setSongs","albums","setAlbums","artists","setArtists","playlists","setPlaylists","loading","setLoading","useEffect","a","axios","get","console","log","makeLists","data","fetchData","playCount","e","put","song_id","youtube_id","count","play_count","sArray","map","key","className","to","onClick","song","title","onPlay","videoId","id","opts","width","height","alArray","name","alt","src","cover_img","arArray","pArray","active","spinner","css","color","style","zIndex","size","left","top","background","position","user","Songs","list","setList","search","setSearch","preferences","setPreferences","admin","setAdmin","toggleDelete","setToggleDelete","favorites","setFavorites","togglePref","setTogglePref","email","getPreferences","isAdmin","is_admin","x","JSON","parse","filter","toUpperCase","includes","favoriteList","makeSongs","deleteSong","newId","replace","delete","isLiked","toggle","is_liked","array","heart","like","adminDelete","marginTop","cursor","filterFavorites","placeholder","onChange","event","target","value","Artists","makeArtists","deleteArtist","newName","Playlists","makePlaylists","deletePlaylist","Albums","makeAlbums","deleteAlbum","PostSong","validateLength","length","test","addSong","artist","album","track_number","lyrics","created_at","document","getElementById","innerHTML","newCreated_at","slice","newLyrics","newTitle","newArtist","newAlbum","post","reset","selectArtist","label","selectAlbum","onSubmit","required","type","defaultValue","maxMenuHeight","options","rows","form","marginLeft","fontSize","PostAlbum","addAlbum","image","class","PostArtist","addArtist","PostPlaylist","addPlaylist","newSongs","push","selectSong","isMulti","SongData","split","item","idx","display","substr","App","registerOpen","setRegisterOpen","loginOpen","setLoginOpen","undefined","setUser","setSong","localStorage","getItem","setTimeout","autoLogin","handleLogout","clear","validateEmail","mail","handleRegister","password","repassword","code","generator","generate","numbers","auto_code","setItem","handleLogin","logout","Button","variant","platform","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","fullWidth","DialogActions","login","register","expanded","onToggle","Toggle","Nav","defaultSelected","eventKey","paddingTop","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4d8fbc3c.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction Home(props) {\r\nconst [songs, setSongs] = useState([]);\r\nconst [albums, setAlbums] = useState([]);\r\nconst [artists, setArtists] = useState([]);\r\nconst [playlists, setPlaylists] = useState([]);\r\nconst [loading, setLoading] = useState(true);\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      const songs = await axios.get(`/top_songs`);\r\n      const albums = await axios.get(`/top_albums`);\r\n      const artists = await axios.get(`/top_artists`);\r\n      const playlists = await axios.get(`/top_playlists`);\r\n      console.log(songs)\r\n      makeLists(songs.data, albums.data, artists.data, playlists.data)\r\n      setLoading(false)\r\n    }; fetchData();\r\n   }, [])\r\n\r\nconst playCount = async (e) => {\r\nawait axios.put(`/count`, {\r\nsong_id: e.youtube_id,\r\ncount: e.play_count + 1,\r\n});\r\n};\r\n\r\n\r\nconst makeLists = (songs, albums, artists, playlists) => {\r\nlet sArray = songs.map(e => {\r\nreturn (\r\n<li key={e.youtube_id}>\r\n<p>\r\n<NavLink className=\"navTo\" to=\"/SongData\" onClick={() => props.song(e)}>{e.title}</NavLink>\r\n</p>\r\n<YouTube className=\"video\" onPlay={() => playCount(e)}videoId={e.youtube_id} id=\"video\" opts={{width:\"150\",height:\"150\"}}/>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\n\r\nlet alArray = albums.map(e => {\r\nreturn (\r\n<li key={e.name}>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\nlet arArray = artists.map(e => {\r\nreturn (\r\n<li key={e.name}>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\nlet pArray = playlists.map(e => {\r\nreturn (\r\n<li key={e.name}>\r\n<p>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}>\r\n</img>\r\n<br/><br/>\r\n</li>\r\n)}\r\n)\r\nsetSongs(sArray)\r\nsetAlbums(alArray)\r\nsetArtists(arArray)\r\nsetPlaylists(pArray)\r\n}\r\n\r\nconst override =`\r\n  display: block;\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  left: 375px;\r\n`;\r\n\r\n  return (\r\n    <div>\r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  {loading ?\r\n  <p style={{left:\"0\", top:\"-15px\", zIndex:\"1007\", background:\"rgb(0,0,0,0.5)\", position:\"fixed\", width:\"100vw\", height:\"100vh\"}}></p> : ''\r\n  }\r\n  </LoadingOverlay>\r\n\r\n<h3>Hello, {props.user ? props.user.name : 'Guest'}</h3>\r\n<div className=\"lists\"> \r\n<div >\r\n<h4> Top Songs </h4> \r\n<ul className=\"songs\" >{songs}</ul>\r\n</div>\r\n\r\n\r\n<div>  \r\n<h4> Top Albums </h4>  \r\n<ul className=\"albums\">{albums}</ul>\r\n</div>\r\n\r\n\r\n<div >\r\n<h4>Top Artists</h4>\r\n<ul className=\"artists\">{artists}</ul>\r\n</div>\r\n\r\n<div>\r\n<h4>Top Playlists</h4>\r\n<ul className=\"playlists\">{playlists}</ul>\r\n</div>\r\n</div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction Songs(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\nconst [preferences, setPreferences] = useState(\"[]\")\r\nconst [admin, setAdmin] = useState(0)\r\nconst [toggleDelete, setToggleDelete] = useState(false)\r\nconst [favorites, setFavorites] = useState(false)\r\nconst [togglePref, setTogglePref] = useState(false)\r\nconst [loading, setLoading] = useState(true);\r\n\r\nuseEffect(() => {\r\nconst getPreferences = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/preferences/${props.user.email}`)\r\nsetPreferences(data[0].preferences)\r\n} catch {\r\nreturn\r\n}\r\n}; getPreferences();\r\n}, [togglePref])\r\n\r\nuseEffect(() => {\r\nif(props.user){\r\nlet isAdmin = props.user.is_admin;\r\nsetAdmin(isAdmin)\r\n}}, [props.user])\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      let x = JSON.parse(preferences)\r\n      const songs = await (await axios.get(`/top_songs?name=${search}`)).data;\r\n      let list = songs.filter(e => e.title.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makeSongs(list) \r\n      } else {\r\n      let favoriteList = list.filter(e => x.includes(`song: ${e.youtube_id}`))\r\n      makeSongs(favoriteList)\r\n      }\r\n      setLoading(false)\r\n    }; fetchData();\r\n   }, [favorites, search, toggleDelete, preferences])\r\n\r\nconst deleteSong = async (e) => {\r\nconst newId = e.youtube_id.replace(`'`,`''`);\r\nawait axios.delete(`/song/${newId}`);\r\nsetToggleDelete(!toggleDelete)\r\n};\r\n\r\nconst playCount = async (e) => {\r\nawait axios.put(`/count`, {\r\nsong_id: e.youtube_id,\r\ncount: e.play_count + 1,\r\n});\r\n};\r\n\r\n\r\nconst isLiked = async (e) => {\r\nlet x = JSON.parse(preferences)\r\nif (x.includes(`song: ${e.youtube_id}`)){\r\nawait axios.put(`/song/like`, {\r\ntoggle: 'unlike',\r\nis_liked: e.is_liked - 1,\r\npreferences: x,\r\nuser: props.user.email,\r\nyoutube_id: e.youtube_id,\r\n});\r\nsetTogglePref(!togglePref)\r\n} else {\r\nawait axios.put(`/song/like`, {\r\ntoggle: 'like',\r\nis_liked: e.is_liked + 1,\r\nuser: props.user.email,\r\nyoutube_id: e.youtube_id,\r\n});\r\nsetTogglePref(!togglePref)\r\n}\r\n}\r\n\r\n\r\nconst makeSongs = (songs) => {\r\n\r\nlet x = JSON.parse(preferences);\r\n\r\nlet array = songs.map(e => {\r\nconst heart = x.includes(`song: ${e.youtube_id}`) ? <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\nconst like = props.user ? heart :  '';\r\n\r\nconst deleteButton = <button style={{marginTop:\"20px\"}} onClick={() => deleteSong(e)} className=\"deleteButton\">Delete</button>;\r\nconst adminDelete = admin === 1 ? deleteButton : '';\r\n\r\nreturn (\r\n<li key={e.youtube_id} className=\"grid-item\">\r\n<p><span style={{cursor:'pointer'}} onClick={() => isLiked(e)}>{like} {\" \"} </span>\r\n<NavLink className=\"navTo\" to=\"/SongData\" onClick={() => props.song(e)}>{e.title}</NavLink>\r\n</p>\r\n<YouTube className=\"video\" onPlay={() => playCount(e)} videoId={e.youtube_id} id=\"video\" opts={{width:\"150\",height:\"150\"}}/>\r\n{adminDelete}\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\nconst override =`\r\n  display: block;\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  left: 375px;\r\n    top:200px;\r\n`;\r\n\r\n  return (\r\n<div> \r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  {loading ?\r\n  <p style={{left:\"0\", top:\"-15px\", zIndex:\"1007\", background:\"rgb(0,0,0,0.5)\", position:\"fixed\", width:\"100vw\", height:\"100vh\"}}></p> : ''\r\n  }\r\n  </LoadingOverlay>\r\n<p className='listTitle'>Songs</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} /> \r\n<HashRouter>\r\n<NavLink className=\"fa fa-plus-square-o add\" to=\"/PostSong\"></NavLink>\r\n</HashRouter>\r\n{props.user ? <i className=\"filterFavorites\" onClick={() => setFavorites(!favorites)}>{filterFavorites}</i> : ''}\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Songs;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction Artists(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\nconst [preferences, setPreferences] = useState(\"[]\")\r\nconst [admin, setAdmin] = useState(0)\r\nconst [toggleDelete, setToggleDelete] = useState(false)\r\nconst [favorites, setFavorites] = useState(false)\r\nconst [togglePref, setTogglePref] = useState(false)\r\nconst [loading, setLoading] = useState(true);\r\n\r\nuseEffect(() => {\r\nconst getPreferences = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/preferences/${props.user.email}`)\r\nsetPreferences(data[0].preferences)\r\n} catch {\r\nreturn\r\n}\r\n}; getPreferences();\r\n}, [togglePref])\r\n\r\nuseEffect(() => {\r\nif(props.user){\r\nlet isAdmin = props.user.is_admin;\r\nsetAdmin(isAdmin)\r\n}}, [props.user])\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      let x = JSON.parse(preferences)\r\n      const artists = await (await axios.get(`/top_artists?name=${search}`)).data;\r\n      let list = artists.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makeArtists(list) \r\n      } else {\r\n      let favoriteList = list.filter(e => x.includes(`artist: ${e.name}`))\r\n      makeArtists(favoriteList)\r\n      }\r\n      setLoading(false)\r\n    }; fetchData();\r\n   }, [favorites, search, toggleDelete, preferences])\r\n\r\nconst deleteArtist = async (e) => {\r\nconst newName = e.name.replace(`'`,`''`);\r\nawait axios.delete(`/artist/${newName}`);\r\nsetToggleDelete(!toggleDelete)\r\n};\r\n\r\nconst isLiked = async (e) => {\r\nlet x = JSON.parse(preferences)\r\nif (x.includes(`artist: ${e.name}`)){\r\nawait axios.put(`/artist/like`, {\r\ntoggle: 'unlike',\r\nis_liked: e.is_liked - 1,\r\npreferences: x,\r\nuser: props.user.email,\r\nname: e.name,\r\n});\r\nsetTogglePref(!togglePref)\r\n} else {\r\nawait axios.put(`/artist/like`, {\r\ntoggle: 'like',\r\nis_liked: e.is_liked + 1,\r\nuser: props.user.email,\r\nname: e.name,\r\n});\r\nsetTogglePref(!togglePref)\r\n}\r\n}\r\n\r\n\r\nconst makeArtists = (artists) => {\r\n\r\nlet x = JSON.parse(preferences);\r\n\r\nlet array = artists.map(e => {\r\nconst heart = x.includes(`artist: ${e.name}`) ? <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\nconst like = props.user ? heart :  '';\r\n\r\nconst deleteButton = <button onClick={() => deleteArtist(e)} className=\"deleteButton\">Delete</button>;\r\nconst adminDelete = admin === 1 ? deleteButton : '';\r\n\r\nreturn (\r\n<li key={e.name} className=\"grid-item\">\r\n<p><span style={{cursor:'pointer'}} onClick={() => isLiked(e)}>{like} </span>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}></img>\r\n{adminDelete}\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\nconst override =`\r\n  display: block;\r\n    top:200px;\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  left: 375px;\r\n`;\r\n\r\n  return (\r\n<div> \r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  {loading ?\r\n  <p style={{left:\"0\", top:\"-15px\", zIndex:\"1007\", background:\"rgb(0,0,0,0.5)\", position:\"fixed\", width:\"100vw\", height:\"100vh\"}}></p> : ''\r\n  }\r\n  </LoadingOverlay>\r\n<p className='listTitle'>Artists</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} /> \r\n<NavLink className=\"fa fa-plus-square-o add\" to=\"/PostArtist\"></NavLink>\r\n{props.user ? <i className=\"filterFavorites\" onClick={() => setFavorites(!favorites)}>{filterFavorites}</i> : ''}\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Artists;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n  \r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction Playlists(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\nconst [preferences, setPreferences] = useState(\"[]\")\r\nconst [admin, setAdmin] = useState(0)\r\nconst [toggleDelete, setToggleDelete] = useState(false)\r\nconst [favorites, setFavorites] = useState(false)\r\nconst [togglePref, setTogglePref] = useState(false)\r\nconst [loading, setLoading] = useState(true);\r\n\r\nuseEffect(() => {\r\nconst getPreferences = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/preferences/${props.user.email}`)\r\nsetPreferences(data[0].preferences)\r\n} catch {\r\nreturn\r\n}\r\n}; getPreferences();\r\n}, [togglePref])\r\n\r\nuseEffect(() => {\r\nif(props.user){\r\nlet isAdmin = props.user.is_admin;\r\nsetAdmin(isAdmin)\r\n}}, [props.user])\r\n\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      let x = JSON.parse(preferences)\r\n      const playlists = await (await axios.get(`/top_playlists?name=${search}`)).data;\r\n      let list = playlists.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makePlaylists(list) \r\n      } else {\r\n      let favoriteList = list.filter(e => x.includes(`playlist: ${e.id}`))\r\n      makePlaylists(favoriteList)\r\n      }\r\n      setLoading(false)\r\n    }; fetchData();\r\n   }, [favorites, search, toggleDelete, preferences])\r\n\r\nconst deletePlaylist = async (e) => {\r\nconst newName = e.name.replace(`'`,`''`);\r\nawait axios.delete(`/playlist/${newName}`);\r\nsetToggleDelete(!toggleDelete)\r\n};\r\n\r\nconst isLiked = async (e) => {\r\nlet x = JSON.parse(preferences)\r\nif (preferences.includes(`playlist: ${e.id}`)){\r\nawait axios.put(`/playlist/like`, {\r\ntoggle: 'unlike',\r\nis_liked: e.is_liked - 1,\r\npreferences: x,\r\nuser: props.user.email,\r\nid: e.id,\r\n});\r\nsetTogglePref(!togglePref)\r\n} else {\r\nawait axios.put(`/playlist/like`, {\r\ntoggle: 'like',\r\nis_liked: e.is_liked + 1,\r\nuser: props.user.email,\r\nid: e.id,\r\n});\r\nsetTogglePref(!togglePref)\r\n}\r\n}\r\n\r\n\r\nconst makePlaylists = (playlists) => {\r\n\r\nlet x = JSON.parse(preferences)\r\n\r\nlet array = playlists.map(e => {\r\nconst heart = x.includes(`playlist: ${e.id}`) ? <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\nconst like = props.user ? heart :  '';\r\n\r\nconst deleteButton = <button onClick={() => deletePlaylist(e)} className=\"deleteButton\">Delete</button>;\r\nconst adminDelete = admin === 1 ? deleteButton : '';\r\n\r\nreturn (\r\n<li key={e.name} className=\"grid-item\">\r\n<p><span style={{cursor:'pointer'}} onClick={() => isLiked(e)}>{like} </span>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}></img>\r\n{adminDelete}\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\nconst override =`\r\n  display: block;\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n  top:200px;\r\n  left: 375px;\r\n`;\r\n\r\n  return (\r\n<div> \r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  {loading ?\r\n  <p style={{left:\"0\", top:\"-15px\", zIndex:\"1007\", background:\"rgb(0,0,0,0.5)\", position:\"fixed\", width:\"100vw\", height:\"100vh\"}}></p> : ''\r\n  }\r\n  </LoadingOverlay>\r\n<p className='listTitle'>Playlists</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} /> \r\n<NavLink className=\"fa fa-plus-square-o add\" to=\"/PostPlaylist\"></NavLink>\r\n{props.user ? <i className=\"filterFavorites\" onClick={() => setFavorites(!favorites)}>{filterFavorites}</i> : ''}\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\n\r\nexport default Playlists;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  } from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction Albums(props) {\r\nconst [list, setList] = useState([])\r\nconst [search, setSearch] = useState('')\r\nconst [preferences, setPreferences] = useState(\"[]\")\r\nconst [admin, setAdmin] = useState(0)\r\nconst [toggleDelete, setToggleDelete] = useState(false)\r\nconst [favorites, setFavorites] = useState(false)\r\nconst [togglePref, setTogglePref] = useState(false)\r\nconst [loading, setLoading] = useState(true);\r\n\r\nuseEffect(() => {\r\nconst getPreferences = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/preferences/${props.user.email}`)\r\nsetPreferences(data[0].preferences)\r\n} catch {\r\nreturn\r\n}\r\n}; getPreferences();\r\n}, [togglePref])\r\n\r\nuseEffect(() => {\r\nif(props.user){\r\nlet isAdmin = props.user.is_admin;\r\nsetAdmin(isAdmin)\r\n}}, [props.user])\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () => {\r\n      let x = JSON.parse(preferences)\r\n      const albums = await (await axios.get(`/top_albums?name=${search}`)).data;\r\n      let list = albums.filter(e => e.name.toUpperCase().includes(search.toUpperCase()))\r\n      if (!favorites) {\r\n      makeAlbums(list) \r\n      } else {\r\n      let favoriteList = list.filter(e => x.includes(`album: ${e.name}`))\r\n      makeAlbums(favoriteList)\r\n      }\r\n      setLoading(false)\r\n    }; fetchData();\r\n   }, [favorites, search, toggleDelete, preferences])\r\n\r\nconst deleteAlbum = async (e) => {\r\nconst newName = e.name.replace(`'`,`''`);\r\nawait axios.delete(`/album/${newName}`);\r\nsetToggleDelete(!toggleDelete)\r\n};\r\n\r\nconst isLiked = async (e) => {\r\nlet x = JSON.parse(preferences)\r\nif (x.includes(`album: ${e.name}`)){\r\nawait axios.put(`/album/like`, {\r\ntoggle: 'unlike',\r\nis_liked: e.is_liked - 1,\r\npreferences: x,\r\nuser: props.user.email,\r\nname: e.name,\r\n});\r\nsetTogglePref(!togglePref)\r\n} else {\r\nawait axios.put(`/album/like`, {\r\ntoggle: 'like',\r\nis_liked: e.is_liked + 1,\r\nuser: props.user.email,\r\nname: e.name,\r\n});\r\nsetTogglePref(!togglePref)\r\n}\r\n}\r\n\r\n\r\nconst makeAlbums = (albums) => {\r\n\r\nlet x = JSON.parse(preferences);\r\n\r\nlet array = albums.map(e => {\r\nconst heart = x.includes(`album: ${e.name}`) ? <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\nconst like = props.user ? heart :  '';\r\n\r\nconst deleteButton = <button onClick={() => deleteAlbum(e)} className=\"deleteButton\">Delete</button>;\r\nconst adminDelete = admin === 1 ? deleteButton : '';\r\n\r\nreturn (\r\n<li key={e.name} className=\"grid-item\">\r\n<p><span style={{cursor:'pointer'}} onClick={() => isLiked(e)}>{like} </span>{e.name}</p>\r\n<img alt={e.name} width=\"150\" height=\"150\" src={e.cover_img}></img>\r\n{adminDelete}\r\n</li>\r\n)}\r\n)\r\nsetList(array)\r\n}\r\n\r\nconst filterFavorites = favorites ?  <i className=\"fas fa-heart\"></i> : <i className=\"far fa-heart\"></i>\r\n\r\nconst override =`\r\n  display: block;\r\n  position:absolute;\r\n  width:200px;\r\n  height:200px;\r\n    top:200px;\r\n  left: 375px;\r\n`;\r\n\r\n  return (\r\n<div> \r\n<LoadingOverlay\r\n  active={loading}\r\n  spinner={<ClipLoader css={override} color=\"white\" style={{zIndex:1010}} size={150}/>}\r\n  >\r\n  {loading ?\r\n  <p style={{left:\"0\", top:\"-15px\", zIndex:\"1007\", background:\"rgb(0,0,0,0.5)\", position:\"fixed\", width:\"100vw\", height:\"100vh\"}}></p> : ''\r\n  }\r\n  </LoadingOverlay>\r\n<p className='listTitle'>Albums</p>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} /> \r\n<NavLink className=\"fa fa-plus-square-o add\" to=\"/PostAlbum\"></NavLink>\r\n{props.user ? <i className=\"filterFavorites\" onClick={() => setFavorites(!favorites)}>{filterFavorites}</i> : ''}\r\n<ul className=\"grid-container\">\r\n{list}\r\n</ul>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Albums;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Select from 'react-select';\r\n\r\nfunction PostSong(props) {\r\nconst [albums, setAlbums] = useState([]);\r\nconst [artists, setArtists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setAlbums(await (await axios.get(`/top_albums`)).data);\r\n      setArtists(await (await axios.get(`/top_artists`)).data);\r\n    }; fetchData();\r\n   }, []);\r\n  \r\nfunction validateDate(date) {\r\n if (/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(date))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\nfunction validateTrack(track) {\r\n   if (/^[1-9]\\d{0,1}(?:,\\d{1,3})?$/.test(track))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\nfunction validateLength(length) {\r\nif (/^([0-5]?[0-9]|2[0-3]):[0-5][0-9]$/.test(length)) {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n  const addSong = async (title, length, youtube_id, artist, album, track_number, lyrics, created_at) => {\r\n    if(artist === null) {\r\n    return document.getElementById('songError').innerHTML = \"Select an artist\";\r\n    }\r\n    if(album === null) {\r\n    return document.getElementById('songError').innerHTML = \"Select an album\";\r\n    }\r\n  const newCreated_at = created_at.slice(0,10)\r\n  const newLyrics = lyrics.replace(`'`,`''`);\r\n  const newTitle = title.replace(`'`,`''`);\r\n  const newArtist = artist.replace(`'`,`''`);\r\n  const newAlbum = album.replace(`'`,`''`);\r\n    if (!props.user) {\r\n    return document.getElementById('songError').innerHTML = 'Only registered users can post new songs to the website!';\r\n    }\r\n    if (!validateLength(length)) {\r\n    return document.getElementById('songError').innerHTML = 'Length form is invalid';\r\n    }\r\n    if (!validateDate(newCreated_at)) {\r\n    return document.getElementById('songError').innerHTML = \"Release date form is invalid\";\r\n    }\r\n    if(!validateTrack(track_number)) {\r\n    return document.getElementById('songError').innerHTML = \"Track number field must be a number\";\r\n    }\r\n    try{\r\n    await axios.post(`/song`, {\r\n    title: newTitle, \r\n    length: length, \r\n    youtube_id: youtube_id, \r\n    artist: newArtist, \r\n    album: newAlbum, \r\n    track_number: track_number, \r\n    lyrics: newLyrics, \r\n    created_at: newCreated_at,\r\n    })\r\n  document.getElementById(\"songForm\").reset();\r\n} catch (response){\r\n   document.getElementById('songError').innerHTML = \"Song already exists\";\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet title;\r\nlet youtube_id;\r\nlet length;\r\nlet track_number;\r\nlet lyrics;\r\nlet created_at;\r\nlet artist;\r\nlet album;\r\n\r\n      function insertTitle(event) {\r\n        title = event.target.value;\r\n      }\r\n      function insertLength(event) {\r\n        length = event.target.value;\r\n      }\r\n      function insertYoutube(event) {\r\n        youtube_id = event.target.value;\r\n      }\r\n      function insertTrack(event) {\r\n        track_number = event.target.value;\r\n      }\r\n\r\n      function insertLyrics(event) {\r\n        lyrics = event.target.value;\r\n      }\r\n      function insertRelease(event) {\r\n        created_at = event.target.value;\r\n      }\r\n      function insertArtist(event) {\r\n        artist = event;\r\n      }\r\n       function insertAlbum(event) {\r\n        album = event;\r\n      }\r\n\r\nlet selectArtist = artists.map(e => ({ value: e.name, label: e.name }))\r\nlet selectAlbum = albums.map(e => ({value: e.name, label: `${e.name} - ${e.artist}` }))\r\n\r\nreturn (\r\n <form id=\"songForm\" className=\"songForm\" onSubmit={() => addSong(title, length, youtube_id, artist, album, track_number, lyrics, created_at)}>\r\n   <div>\r\n    <label> Name of the song: </label><br/>\r\n    <input required type=\"text\" defaultValue={title} onChange={insertTitle}/> <br/><br/>\r\n<label>Youtube ID: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">youtube.com/watch?v= (Youtube_ID)</span></i><br/>\r\n    <input required type=\"text\" defaultValue={youtube_id} onChange={insertYoutube}/><br/><br/>\r\n    <label> Length: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">M M : S S</span></i><br/>\r\n    <input required type=\"text\" defaultValue={length} onChange={insertLength}/> <br/><br/>\r\n    <label>Artist: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">You can only post albums of uploaded artists</span></i><br/>\r\n    <Select required maxMenuHeight={160}\r\n    defaultValue={artist}\r\n    onChange={insertArtist}\r\n    options={selectArtist}>\r\n    </Select><br/>\r\n    <label> Album: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">You can only post songs of uploaded albums</span></i><br/>\r\n    <Select required maxMenuHeight={160}\r\n    defaultValue={album}\r\n    onChange={insertAlbum}\r\n    options={selectAlbum}>\r\n    </Select><br/>\r\n    <label> Track number: </label><br/>\r\n    <input required type=\"text\" defaultValue={track_number} onChange={insertTrack}/><br/><br/>\r\n     </div>\r\n     <div>\r\n    <label> Lyrics: </label><br/>\r\n    <textarea rows=\"12\" required type=\"text\" defaultValue={lyrics} onChange={insertLyrics}/> <br/><br/>\r\n    <label> Release date: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">Y Y Y Y - M M - D D</span></i><br/>\r\n    <input required type=\"text\" defaultValue={created_at} onChange={insertRelease}/><br/><br/>\r\n    <input type='submit' className=\"post\" value=\"Post Song\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<NavLink className=\"fa fa-arrow-left back\" to=\"/Songs\"></NavLink>\r\n<p id=\"songError\" style={{marginTop:\"10px\", marginLeft:\"20px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostSong;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Select from 'react-select';\r\n\r\nfunction PostAlbum(props) {\r\nconst [artists, setArtists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setArtists(await (await axios.get(`/top_artists`)).data);\r\n    }; fetchData();\r\n   }, []);\r\n  \r\nfunction validateDate(date) {\r\n if (/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(date))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n  const addAlbum = async (name, image, artist, created_at) => {\r\n  const newCreated_at = created_at.slice(0,10)\r\n    if (!validateDate(newCreated_at)) {\r\n    return document.getElementById('albumError').innerHTML = \"Release date form is invalid\";\r\n    }\r\n    if (!props.user) {\r\n    return document.getElementById('albumError').innerHTML = 'Only registered users can post new albums to the website!';\r\n    }\r\n    if(artist === null) {\r\n    return document.getElementById('albumError').innerHTML = \"Select an artist\";\r\n    }\r\n  const newName = name.replace(`'`,`''`);\r\n  const newArtist = artist.replace(`'`,`''`);\r\n    try{\r\n    await axios.post(`/album`, {\r\n    name: newName, \r\n    artist: newArtist, \r\n    cover_img: image,\r\n    created_at: newCreated_at,\r\n    })\r\n  document.getElementById(\"albumForm\").reset();\r\n} catch (response){\r\n   document.getElementById('albumError').innerHTML = \"Album already exists\";\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet name;\r\nlet image;\r\nlet created_at;\r\nlet artist;\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n      function insertImage(event) {\r\n        image = event.target.value;\r\n      }\r\n\r\n      function insertRelease(event) {\r\n        created_at = event.target.value;\r\n      }\r\n\r\n      function insertArtist(event) {\r\n        artist = event;\r\n      }\r\n\r\nlet selectArtist = artists.map(e => ({ value: e.name, label: e.name }))\r\n\r\nreturn (\r\n <form id=\"albumForm\" className=\"albumForm\" onSubmit={() => addAlbum(name, image, artist, created_at)}>\r\n   <div>\r\n    <label> Name of the Album: </label><br/>\r\n    <input required type=\"text\" id=\"title\" defaultValue={name} onChange={insertName}/> <br/><br/>\r\n    <label>Artist: </label><i class='tooltip fas fa-info'> <span class=\"tooltiptext\">You can only post albums of uploaded artists</span></i><br/>\r\n    <Select style={{}} required maxMenuHeight={160}\r\n    defaultValue={artist}\r\n    onChange={insertArtist}\r\n    options={selectArtist}>\r\n    </Select><br/>\r\n    <label> Cover image URL </label><br/>\r\n    <input required type=\"text\" defaultValue={image} onChange={insertImage}/><br/><br/>\r\n    <label> Release date: </label><i class='tooltip fas fa-info'> <span class=\"tooltiptext\">Y Y Y Y - M M - D D</span></i><br/>\r\n    <input required type=\"text\" defaultValue={created_at} onChange={insertRelease}/><br/><br/>\r\n    <input type='submit' style={{left:'410px'}} className=\"post\" value=\"Post Album\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<NavLink className=\"fa fa-arrow-left back\" style={{left:\"84px\"}} to=\"/Albums\"></NavLink>\r\n<p id=\"albumError\" style={{marginTop:\"0px\", marginLeft:\"130px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostAlbum;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\n\r\nfunction PostArtist(props) {\r\n\r\n  const addArtist = async (name, image) => {\r\n  const newName = name.replace(`'`,`''`);\r\n    try{\r\n    await axios.post(`/artist`, {\r\n    name: newName, \r\n    cover_img: image,\r\n    })\r\n  document.getElementById(\"artistForm\").reset();\r\n} catch (response){\r\n   document.getElementById('artistError').innerHTML = \"Artist already exists\";\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet name;\r\nlet image;\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n      function insertImage(event) {\r\n        image = event.target.value;\r\n      }\r\n\r\nreturn (\r\n <form id=\"artistForm\" className=\"artistForm\" onSubmit={() => addArtist(name, image)}>\r\n   <div>\r\n    <label> Name of the Artist: </label><br/>\r\n    <input required type=\"text\" defaultValue={name} onChange={insertName}/> <br/><br/>\r\n    <label> Artist image URL </label><br/>\r\n    <input required type=\"text\" defaultValue={image} onChange={insertImage}/><br/><br/>\r\n    <input type='submit' style={{left:'418px'}} className=\"post\" value=\"Post Artist\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<NavLink className=\"fa fa-arrow-left back\" style={{left:\"83px\"}} to=\"/Artists\"></NavLink>\r\n<p id=\"artistError\" style={{marginTop:\"-2px\", marginLeft:\"120px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostArtist;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport Select from 'react-select';\r\n\r\nfunction PostPlaylist(props) {\r\nconst [songs, setSongs] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setSongs(await (await axios.get(`/top_songs`)).data);\r\n    }; fetchData();\r\n   }, []); \r\n\r\nfunction validateDate(date) {\r\n if (/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(date))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n  const addPlaylist = async (name, songs, image, created_at) => {\r\n  let newSongs = []\r\n  for (let song of songs){\r\n  newSongs.push(song.value)\r\n  }\r\n  console.log(newSongs)\r\n  const newCreated_at =  created_at.slice(0,10)\r\n    if (!props.user) {\r\n    return document.getElementById('playlistError').innerHTML = 'Only registered users can post new playlists to the website!';\r\n    }\r\n    if (!validateDate(newCreated_at)) {\r\n    return document.getElementById('playlistError').innerHTML = \"Release date form is invalid\";\r\n    }\r\n    if(songs === null) {\r\n    return document.getElementById('playlistError').innerHTML = \"Select songs\";\r\n    }\r\n  const newName = name.replace(`'`,`''`);\r\n    try{\r\n    await axios.post(`/playlist`, {\r\n    name: newName, \r\n    songs: newSongs, \r\n    cover_img: image,\r\n    created_at: newCreated_at,\r\n    })\r\n  document.getElementById(\"playlistForm\").reset();\r\n} catch (response){\r\n   document.getElementById('playlistError').innerHTML = \"Undetected error\";\r\n  }; \r\n};\r\n\r\n\r\nfunction form(){\r\nlet name;\r\nlet image;\r\nlet created_at;\r\nlet song;\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n      function insertImage(event) {\r\n        image = event.target.value;\r\n      }\r\n\r\n      function insertRelease(event) {\r\n        created_at = event.target.value;\r\n      }\r\n\r\n      function insertSongs(event) {\r\n        song = event;\r\n      }\r\n\r\nlet selectSong = songs.map(e => ({ value: e.youtube_id, label: `${e.title} - ${e.artist}` }))\r\n\r\nreturn (\r\n <form id=\"playlistForm\" className=\"playlistForm\" onSubmit={() => addPlaylist(name, song, image, created_at)}>\r\n   <div>\r\n    <label> Name of the Playlist: </label><br/>\r\n    <input required type=\"text\" defaultValue={name} onChange={insertName}/> <br/><br/>\r\n    <label> Songs: </label><br/>\r\n    <Select\r\n    required\r\n    maxMenuHeight={160}\r\n    isMulti\r\n    defaultValue={song}\r\n    onChange={insertSongs}\r\n    options={selectSong}>\r\n    </Select><br/>\r\n    <label> Cover image URL </label><br/>\r\n    <input required type=\"text\" defaultValue={image} onChange={insertImage}/><br/><br/>\r\n    <label> Release date: </label><i className='tooltip fas fa-info'> <span className=\"tooltiptext\">Y Y Y Y - M M - D D</span></i><br/>\r\n    <input required type=\"text\" defaultValue={created_at} onChange={insertRelease}/><br/><br/>\r\n    <input type='submit' style={{left:'400px'}} className=\"post\" value=\"Post Playlist\"/>\r\n    </div>\r\n    </form>\r\n\r\n)}\r\n\r\n  return (\r\n<div> \r\n{form()}\r\n<NavLink className=\"fa fa-arrow-left back\" style={{left:\"83px\"}} to=\"/Playlists\"></NavLink>\r\n<p id=\"playlistError\" style={{marginTop:\"-2px\", marginLeft:\"120px\", fontSize:'20px', color:\"red\"}}></p>\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default PostPlaylist;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport YouTube from 'react-youtube';\r\n\r\nfunction SongData(props) {\r\n\r\nlet lyrics = ''    \r\n\r\nif(props.song){\r\nlyrics = props.song.lyrics.split(\"\\\\n\").map(function(item, idx) {\r\n        return (\r\n            <span key={idx}>\r\n                {item}\r\n                <br/>\r\n            </span>\r\n         )})\r\n        }\r\n\r\nconst playCount = async (e) => {\r\nawait axios.put(`/count`, {\r\nsong_id: e.youtube_id,\r\ncount: e.play_count + 1,\r\n});\r\n};\r\n\r\nfunction data(e){\r\nif(e) {\r\n\r\nreturn (\r\n<div style={{color:\"white\", display:\"flex\"}}>\r\n<div>\r\n<YouTube className=\"video\" onPlay={() => playCount(e)} videoId={e.youtube_id} id=\"video\" opts={{width:\"250\",height:\"250\"}}/>\r\n<br/>\r\n<i>{e.is_liked} people liked this song</i><br/>\r\n<br/>\r\n<i><strong>Views:</strong>{\" \"} {e.play_count}</i><br/>\r\n<i><strong>Album:</strong>{\" \"}{e.album}</i><br/>\r\n<i><strong>Artist:</strong>{\" \"} {e.artist}</i><br/>\r\n<i><strong>Release date:</strong>{\" \"} {e.created_at.substr(0, 10)}</i><br/><br/>\r\n<HashRouter>\r\n<NavLink style={{marginLeft:\"0px\"}} className=\"fa fa-arrow-left back\" to=\"/Songs\"></NavLink>\r\n</HashRouter>\r\n</div>\r\n<div className=\"dataLyrics\">\r\n{lyrics}\r\n</div>\r\n</div>);\r\n}}\r\n\r\n\r\n  return (\r\n<div style={{position:'absolute', top:\"-30px\", left:\"180px\"}}>\r\n<p className=\"dataTitle\">{props.song.title}</p>\r\n{data(props.song)}\r\n</div>\r\n  );\r\n  }\r\n\r\nexport default SongData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport SideNav, {\r\n NavItem, NavIcon, NavText,\r\n} from '@trendmicro/react-sidenav';\r\nimport Home from './components/Home.js'\r\nimport Songs from './components/Songs.js'\r\nimport Artists from './components/Artists.js'\r\nimport Playlists from './components/Playlists.js'\r\nimport Albums from './components/Albums.js'\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport PostSong from './components/PostSong.js';\r\nimport PostAlbum from './components/PostAlbum.js';\r\nimport PostArtist from './components/PostArtist.js';\r\nimport PostPlaylist from './components/PostPlaylist.js';\r\nimport generator from 'generate-password'\r\nimport SongData from './components/SongData.js';\r\n\r\nfunction App() {\r\nconst [registerOpen, setRegisterOpen] = useState(false)\r\nconst [loginOpen,setLoginOpen] = useState(false)\r\nconst [user, setUser] = useState(undefined);\r\n\r\nconst [song, setSong] = useState('')\r\nconst [album, setAlbum] = useState('')\r\nconst [artist, setArtist] = useState('');\r\nconst [playlist, setPlaylist] = useState('');\r\n\r\n\r\nuseEffect(() => {\r\nlet user = localStorage.getItem('session');\r\nconst autoLogin = async () => {\r\ntry {\r\nconst { data } = await axios.get(`/auto/${user}`);\r\nsetTimeout(() => {\r\nsetUser(data[0])\r\n}, 500);\r\n} catch {\r\nreturn\r\n}\r\n}; autoLogin();\r\n}, [])\r\n\r\nconst handleLogout = async () => {\r\nawait axios.put(`/logout`, {\r\nemail: user.email,\r\n});\r\nsetUser(undefined)\r\nlocalStorage.clear();\r\n    };\r\n\r\n \r\nfunction validateEmail(mail) {\r\n if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail))\r\n  {\r\n    return (true)\r\n  }\r\n    return (false)\r\n}\r\n\r\n  const handleRegister = async (email, name, password, repassword) => {\r\n    let code = generator.generate({\r\n    length: 20,\r\n    numbers: true\r\n});\r\n    try{\r\n    if(validateEmail(email)) {\r\n          if (password === repassword){\r\n      const { data } = await axios.post(`/users`, {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      auto_code: code,\r\n      });\r\nlocalStorage.setItem('session', code);\r\nsetUser(data[0])\r\nsetRegisterOpen(false)\r\n           } else {\r\ndocument.getElementById('errorMessage').innerHTML='Password fields do not match';\r\n           }\r\n          } else {\r\n document.getElementById('errorMessage').innerHTML='Please enter a valid email address';\r\n           }\r\n  } catch(response){\r\n  document.getElementById('errorMessage').innerHTML='The email you tried to register with is already in use';\r\n  }; \r\n  }\r\n\r\n    const handleLogin = async (email, password) => {\r\n    let code = generator.generate({\r\n    length: 20,\r\n    numbers: true\r\n});\r\n    try{\r\n    if(validateEmail(email)) {\r\n      const { data } = await axios.put(`/users`, {\r\n      email: email,\r\n      password: password,\r\n      auto_code: code,\r\n      });\r\nlocalStorage.setItem('session', code);\r\nsetLoginOpen(false)   \r\nsetTimeout(() => {\r\nsetUser(data[0])\r\n}, 500);\r\n    } else {\r\n document.getElementById('errorMessage').innerHTML='Please enter a valid email address';\r\n    }\r\n  } catch (response){\r\n  document.getElementById('errorMessage').innerHTML='Either the email or password you entered is incorrect';\r\n  }; \r\n};\r\n\r\nfunction login(){\r\nlet email;\r\nlet password;\r\n\r\n      function insertEmail(event) {\r\n        email = event.target.value;\r\n      }\r\n\r\n      function insertPassword(event) {\r\n        password = event.target.value;\r\n      }\r\n\r\nreturn (\r\n  <span>\r\n<Button variant=\"text\" color=\"inherit\" onClick={() => setLoginOpen(true)}>\r\n        Login\r\n      </Button>\r\n      <Dialog open={loginOpen} onClose={() => setLoginOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            onChange={insertEmail}\r\n            defaultValue={email}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            required\r\n            fullWidth\r\n          />\r\n            <TextField\r\n            onChange={insertPassword}\r\n            autoFocus\r\n            defaultValue={password}\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            required\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogTitle style={{color:'red'}} id=\"errorMessage\"></DialogTitle>\r\n        <DialogActions>\r\n          <Button type=\"submit\" onClick={() => setLoginOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleLogin(email, password)} color=\"primary\">\r\n            login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </span>\r\n)}\r\n\r\nfunction register(){\r\nlet email;\r\nlet name;\r\nlet password;\r\nlet repassword\r\n\r\n      function insertEmail(event) {\r\n        email = event.target.value;\r\n      }\r\n\r\n      function insertName(event) {\r\n        name = event.target.value;\r\n      }\r\n\r\n      function insertPassword(event) {\r\n        password = event.target.value;\r\n      }\r\n\r\n      function insertRePassword(event) {\r\n        repassword = event.target.value;\r\n      }\r\n\r\nreturn (\r\n  <span>\r\n<Button variant=\"text\" color=\"inherit\" onClick={() => setRegisterOpen(true)}>\r\n        Register\r\n      </Button>\r\n      <Dialog open={registerOpen} onClose={() => setRegisterOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Register</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            onChange={insertEmail}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            onChange={insertName}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"name\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            onChange={insertPassword}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            onChange={insertRePassword}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"rePassword\"\r\n            label=\"Confirm password\"\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogTitle style={{color:'red'}} id=\"errorMessage\"></DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setRegisterOpen(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleRegister(email, name, password, repassword)} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </span>\r\n)}\r\n\r\nconst logout =\r\n<Button style={{marginLeft:'85px'}} variant=\"text\" color=\"inherit\" onClick={handleLogout}>\r\nLogout\r\n</Button>\r\n\r\nconst platform = user ? <h5> {logout} </h5> :  <h5> {login()} | {register()} </h5>\r\n\r\n  return (\r\n    \r\n<div className=\"App\">\r\n\r\n{platform}\r\n    <HashRouter>\r\n   <SideNav\r\n        className=\"sideNav\"\r\n        expanded={true}\r\n        onToggle={() => {return}}\r\n      >\r\n        <SideNav.Toggle/>\r\n        <SideNav.Nav defaultSelected=\"home\">\r\n          <NavItem eventKey=\"home\">\r\n            <NavIcon>\r\n              <i style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n              <NavLink to=\"/\"><i style={{color:'white', fontSize:'44px', paddingTop:\"3px\"}} className=\"fa fa-fw fa-home\" /></NavLink>\r\n          </NavItem>\r\n          <NavItem eventKey=\"1\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n               <NavLink className=\"navItem\" to=\"/Songs\">Songs</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n             <NavItem eventKey=\"2\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n               <NavLink className=\"navItem\" to=\"/Albums\">Albums</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n          <NavItem eventKey=\"3\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n           <NavLink className=\"navItem\" to=\"/Artists\">Artists</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n          <NavItem eventKey=\"4\">\r\n            <NavIcon>\r\n              <i className=\"fa fa-fw \" style={{ fontSize: '1.75em' }} />\r\n            </NavIcon>\r\n            <NavText>\r\n             <NavLink className=\"navItem\" to=\"/Playlists\">Playlists</NavLink>\r\n            </NavText>\r\n          </NavItem>\r\n        </SideNav.Nav>\r\n      </SideNav>\r\n  <Route exact path=\"/\" component={() => <Home song={e => setSong(e)} user={user}/>}/>\r\n<Route path=\"/Songs\" component={() => <Songs song={e => setSong(e)} user={user}/>}/>\r\n<Route path=\"/Artists\" component={() => <Artists user={user}/>}/>\r\n<Route path=\"/Playlists\" component={() => <Playlists user={user}/>}/>\r\n<Route path=\"/Albums\" component={() => <Albums user={user}/>}/>\r\n<Route path=\"/PostSong\" component={() => <PostSong user={user}/>}/>\r\n<Route path=\"/PostAlbum\" component={() => <PostAlbum user={user}/>}/>\r\n<Route path=\"/PostArtist\" component={() => <PostArtist user={user}/>}/>\r\n<Route path=\"/PostPlaylist\" component={() => <PostPlaylist user={user}/>}/>\r\n<Route path=\"/SongData\" component={() => <SongData song={song} user={user}/>}/>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}